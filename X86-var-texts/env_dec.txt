_init:
{'constant': [0], 'ir_4': [20], 'ir_7': [4], 'ir_8': [-65544], 'ir_9': [8]}
sub_40018c0:
{'constant': []}
_start:
{'constant': [], 'ir_6': [-65528], 'ir_7': [20], 'ir_8': [-65536], 'ir_9': [0]}
deregister_tm_clones:
{'constant': [0], 'ir_2': [8], 'ir_6': [20]}
register_tm_clones:
{'constant': [0], 'ir_19': [36], 'ir_25': [20]}
__do_global_dtors_aux:
{'constant': [0, 1], 'ir_0': [5], 'ir_1': [0], 'ir_3': [8], 'ir_6': [69251080], 's_8': [1]}
frame_dummy:
{'constant': []}
initialize_exit_failure:
{'constant': [1], 'ir_1': [7]}
emit_mandatory_arg_note:
{'string': ['\nMandatory arguments to long options are mandatory for short options too.\n'], 'constant': [], 'ir_1': [8], 'ir_2': [-65552], 'ir_9': [4], 'ir_10': [-65560]}
emit_ancillary_info:
{'string': ['\n%s online help: <%s>\n', 'en_', 'Report any translation bugs to <https://translationproject.org/team/>\n', 'Full documentation <%s%s>\n', "or available locally via: info '(coreutils) %s%s'\n"], 'constant': [0, 16], 's_c8': [-65688, -65672, -65656, 0], 'ir_7': [19], 'ir_8': [0], 'ir_24': [-65688], 'ir_27': [20], 'ir_70': [5], 'ir_71': [8], 'ir_75': [3], 'ir_88': [], 'ir_119': [4], 'ir_120': [-65736], 'ir_121': [184]}
usage:
{'string': ['Usage: %s [OPTION]... [-] [NAME=VALUE]... [COMMAND [ARG]...]\n', 'Set each NAME to VALUE in the environment and run COMMAND.\n', '  -i, --ignore-environment  start with an empty environment\n  -0, --null           end each output line with NUL, not newline\n  -u, --unset=NAME     remove variable from the environment\n', '  -C, --chdir=DIR      change working directory to DIR\n', '  -S, --split-string=S  process and split S into separate arguments;\n                        used to pass multiple arguments on shebang lines\n', '      --block-signal[=SIG]    block delivery of SIG signal(s) to COMMAND\n', '      --default-signal[=SIG]  reset handling of SIG signal(s) to the default\n', '      --ignore-signal[=SIG]   set handling of SIG signals(s) to do nothing\n', '      --list-signal-handling  list non default signal handling to stderr\n', '  -v, --debug          print verbose information for each processing step\n', '      --help     display this help and exit\n', '      --version  output version information and exit\n', '\nA mere - implies -i.  If no COMMAND, print the resulting environment.\n', "\nSIG may be a signal name like 'PIPE', or a signal number like '13'.\nWithout SIG, all known signals are included.  Multiple signals can be\ncomma-separated.\n", "Try '%s --help' for more information.\n"], 'constant': [0], 'ir_5': [7], 'ir_15': []}
append_unset_var:
{'constant': [1, 8], 'ir_4': [0], 'ir_6': [8], 's_18': [1], 'ir_19': [32]}
unset_envvars:
{'string': ['unset:    %s\n', 'cannot unset %s'], 'constant': [0, 1, 8], 'ir_2': [8], 'ir_3': [-65560], 'ir_4': [16], 's_28': [0, 1], 'ir_5': [0], 'ir_83': [4], 'ir_84': [-65576], 'ir_10': [17], 'ir_21': [0, 8], 'ir_26': [], 'ir_44': [19], 'ir_66': [125]}
valid_escape_sequence:
{'constant': [0, 1, 35, 36, 95, 99, 102, 110, 114, 116, 118], 'ir_2': [5], 'ir_4': [99], 'ir_42': [1], 'ir_7': [102], 'ir_44': [19], 'ir_45': [0, 1], 'ir_46': [0], 'ir_13': [110], 'ir_16': [114], 'ir_19': [116], 'ir_22': [118], 'ir_25': [35], 'ir_28': [36], 'ir_31': [95], 'ir_34': [34], 'ir_37': [39], 'ir_40': [92]}
escape_char:
{'constant': [9, 10, 11, 12, 13], 'ir_10': [7], 'ir_12': [16], 'ir_19': [4], 'ir_29': [210], 'ir_36': [13], 'ir_35': [9], 'ir_34': [11], 'ir_32': [12], 'ir_27': [10]}
scan_varname:
{'constant': [0, 1, 3, 36, 95, 123, 125], 'ir_4': [8], 'ir_6': [0], 'ir_16': [221], 'ir_9': [5], 'ir_11': [36], 'ir_27': [123], 'ir_29': [4], 'ir_31': [2], 'ir_36': [17], 'ir_47': [95], 'ir_60': [3], 'ir_80': [1], 'ir_89': [125]}
extract_varname:
{'constant': [0, 1, 2], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32], 'ir_8': [0], 'ir_26': [4], 'ir_28': [1]}
validate_split_str:
{'string': ['no terminating quote in -S string', 'only ${VARNAME} expansion is supported, error at: %s', "'\\c' must not appear in double-quoted -S string", 'invalid backslash at end of string in -S', "invalid sequence '\\%c' in -S"], 'constant': [0, 1, 2, 34, 36, 39, 92, 95, 99, 8192], 's_58': [0, 1, 2], 'ir_7': [8], 'ir_9': [0], 'ir_42': [280], 'ir_12': [17], 'ir_49': [4], 'ir_51': [1], 'ir_36': [19], 'ir_338': [5], 'ir_357': [-65624], 'ir_358': [72], 'ir_350': [125], 'ir_113': [7], 'ir_115': [36], 'ir_234': [34], 'ir_121': [39], 'ir_124': [92], 'ir_279': [0, 1], 'ir_130': [99], 'ir_335': [308], 'ir_331': [303], 'ir_172': [95]}
build_argv:
{'string': ['replacing ${%s} with null string\n', 'expanding ${%s} into %s\n', ' \t'], 'constant': [0, 1, 2, 6, 7, 8, 9, 32, 34, 35, 36, 39, 89, 92, 95, 99, 8192, 'DUMM'], 's_58': [0, 1, 32, 89], 'ir_10': [0], 'ir_11': [8], 'ir_45': [395], 'ir_16': [17], 'ir_48': [-65604], 'ir_49': [-65600], 'ir_54': [4], 'ir_56': [7], 'ir_41': [19], 'ir_70': [32], 'ir_82': [6], 'ir_95': [35], 'ir_402': [20], 'ir_101': [39], 'ir_316': [5], 'ir_309': [34], 'ir_104': [92], 'ir_372': [1], 'ir_312': [9], 'ir_278': [0, 1], 'ir_107': [36], 'ir_245': [95], 'ir_248': [99], 'ir_168': [125], 'ir_165': []}
parse_split_string:
{'string': ['split -S:  %s\n', ' into:    %s\n', '     &    %s\n'], 'constant': [0, 1, 2, 8, 8192], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [64], 'ir_26': [19], 'ir_28': [0], 'ir_38': [17], 'ir_29': [4], 'ir_31': [1], 'ir_45': [7], 'ir_126': [20], 's_48': [0, 1], 'ir_83': []}
parse_signal_action_params:
{'string': [',', '%s: invalid signal', ','], 'constant': [0, 1, 2, 3, 4, 64], 's_68': [1, 2, 3, 4], 'ir_12': [0], 'ir_13': [8], 'ir_77': [7], 'ir_78': [1, 2, 3], 'ir_79': [64], 'ir_80': [-65592], 'ir_81': [1, 2], 'ir_84': [19], 'ir_123': [20], 'ir_87': [5], 'ir_127': [4], 'ir_128': [-65640], 'ir_129': [88], 'ir_95': [4, 8], 'ir_91': [2], 'ir_73': [1], 'ir_51': [3]}
reset_signal_handlers:
{'string': ['failed to get signal action for signal %d', 'failed to set signal action for signal %d', 'Reset signal %s (%d) to %s%s\n'], 'constant': [0, 1, 2, 4, 64], 's_e8': [0, 1, 2, 3], 'ir_6': [19], 'ir_7': [0], 'ir_10': [7], 'ir_11': [1, 2, 3], 'ir_12': [64], 'ir_15': [4, 8], 'ir_223': [20], 'ir_42': [2], 'ir_227': [4], 'ir_228': [-65768], 'ir_229': [216], 'ir_64': [1], 'ir_107': [17], 'ir_108': [0, 1], 'ir_110': [-65752], 'ir_145': [5], 'ir_188': [-65592], 'ir_136': [125], 'ir_208': []}
parse_block_signal_params:
{'string': [',', '%s: invalid signal', ','], 'constant': [0, 1], 's_68': [1], 'ir_12': [0], 'ir_13': [8], 'ir_27': [5], 'ir_21': [17], 'ir_109': [20], 'ir_113': [4], 'ir_114': [-65640], 'ir_115': [88], 'ir_55': [-65592], 'ir_59': [7]}
set_signal_proc_mask:
{'string': ['failed to get signal process mask', 'signal %s (%d) mask set to %s\n', 'failed to set signal process mask'], 'constant': [0, 1, 64], 's_c8': [0, 1, 2], 'ir_6': [19], 'ir_7': [0], 'ir_10': [-65720], 'ir_31': [7], 'ir_32': [1, 2], 'ir_33': [64], 'ir_34': [1], 'ir_24': [125], 'ir_104': [2], 'ir_120': [20], 'ir_124': [4], 'ir_125': [-65736], 'ir_126': [184], 'ir_63': [17], 'ir_66': [8], 'ir_72': [-65592], 'ir_87': []}
list_signal_handling:
{'string': ['failed to get signal process mask', '%-10s (%2d): %s%s%s\n'], 'constant': [0, 1, 64], 's_178': [1, 2], 'ir_6': [19], 'ir_7': [0], 'ir_10': [-65880], 'ir_31': [7], 'ir_33': [64], 'ir_34': [-65752], 'ir_35': [1], 'ir_24': [125], 'ir_131': [20], 'ir_42': [8], 'ir_58': [0, 73], 'ir_60': [17], 'ir_80': [0, 66], 'ir_96': [-65592], 'ir_106': [-65912], 'ir_111': [], 'ir_113': [4], 'ir_114': [-65928], 'ir_115': [16]}
initialize_signals:
{'constant': [0, 1, 4, 64], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_3': [260], 's_18': [0, 1, 2], 'ir_5': [7], 'ir_7': [64], 'ir_10': [0, 4]}
main:
{'string': ['coreutils', '/usr/local/share/locale', 'coreutils', '+C:iS:u:v0 \t', 'env', 'GNU coreutils', 'Richard Mlynarik', 'David MacKenzie', "invalid option -- '%c'", 'use -[v]S to pass options in shebang lines', '-', 'setenv:   %s\n', 'cannot set %s', 'cannot specify --null (-0) with command', 'must specify command with --chdir (-C)', '%s%c', 'chdir:    %s\n', 'cannot change directory to %s', 'executing: %s\n', '   arg[%d]= %s\n', '%s', 'use -[v]S to pass options in shebang lines'], 'constant': [-131, -130, -1, 0, 1, 2, 3, 8, 9, 32, 48, 67, 83, 105, 117, 118, 127, 128, 130, 131], 'ir_2': [8], 'ir_3': [-65560], 'ir_4': [64], 's_58': [0, 1, 2, 8, 126, 127], 'ir_11': [6], 'ir_15': [125], 'ir_20': [0], 'ir_21': ['igno'], 'ir_24': [7], 'ir_26': [-1], 'ir_142': [1], 'ir_30': [83], 'ir_154': [4], 'ir_176': [5], 'ir_177': [0, 1], 'ir_92': [-65624], 'ir_93': [-65612], 'ir_161': [19], 'ir_80': [9], 'ir_36': [128], 'ir_180': [17], 'ir_171': [2], 'ir_183': [], 'ir_194': [1, 2], 'ir_122': [-131], 'ir_86': [48], 'ir_63': [117], 'ir_42': [130], 'ir_211': [61], 'ir_125': [-130], 'ir_89': [67], 'ir_66': [118], 'ir_139': [-65640], 'ir_140': [16], 'ir_103': [32], 'ir_69': [105], 'ir_48': [131], 'ir_366': [20], 'ir_372': [10], 'ir_379': [0, 10], 'ir_544': [127], 'ir_567': [126, 127]}
operand2sig:
{'string': ['abcdefghijklmnopqrstuvwxyz', '%s: invalid signal'], 'constant': [-1, 0, 1, 9, 32, 48, 71, 73, 83, 127, 254, 255], 's_58': [-1, 0, 127, 255], 'ir_19': [7], 'ir_21': [9], 'ir_119': [-65600], 'ir_121': [10], 'ir_126': [8], 'ir_27': [17], 'ir_29': [0], 'ir_150': [-1], 'ir_58': [-65608], 'ir_170': [19], 'ir_35': [20], 'ir_159': [254], 'ir_67': [5], 'ir_69': [83], 'ir_160': [127], 'ir_165': [127, 255], 'ir_161': [255], 'ir_78': [73], 'ir_91': [71], 'ir_206': [4], 'ir_207': [-65624], 'ir_208': [72]}
c_isalnum:
{'constant': [0, 1, 9, 25, 48, 65, 90, 97], 'ir_2': [7], 'ir_4': [90], 'ir_14': [65], 'ir_11': [25], 'ir_25': [9], 'ir_31': [1], 'ir_30': [0]}
c_isalpha:
{'constant': [0, 1, 65, 90], 'ir_2': [7], 'ir_4': [65], 'ir_23': [0], 'ir_7': [90], 'ir_24': [1], 'ir_14': [25]}
c_isascii:
{'constant': [0, 1, 127], 'ir_6': [7], 'ir_8': [127], 'ir_10': [1], 'ir_9': [0]}
c_isblank:
{'constant': [0, 1, 9, 32], 'ir_1': [7], 'ir_3': [32], 'ir_11': [1], 'ir_6': [9], 'ir_13': [19], 'ir_14': [0, 1], 'ir_15': [0]}
c_iscntrl:
{'constant': [0, 1, 31], 'ir_2': [19], 'ir_4': [0], 'ir_5': [7], 'ir_7': [31], 'ir_18': [1], 'ir_10': [127]}
c_isdigit:
{'constant': [0, 1, 9, 48], 'ir_6': [7], 'ir_8': [9], 'ir_10': [1], 'ir_9': [0]}
c_isgraph:
{'constant': [0, 1, 33, 93], 'ir_6': [7], 'ir_8': [93], 'ir_10': [1], 'ir_9': [0]}
c_islower:
{'constant': [0, 1, 25, 97], 'ir_6': [7], 'ir_8': [25], 'ir_10': [1], 'ir_9': [0]}
c_isprint:
{'constant': [0, 1, 32, 94], 'ir_6': [7], 'ir_8': [94], 'ir_10': [1], 'ir_9': [0]}
c_ispunct:
{'constant': [0, 1, 3, 14, 33, 58, 64, 91, 96, 123], 'ir_2': [7], 'ir_4': [64], 'ir_28': [58], 'ir_7': [91], 'ir_35': [14], 'ir_37': [1], 'ir_36': [0], 'ir_10': [96], 'ir_17': [3]}
c_isspace:
{'constant': [0, 1, 9, 13], 'ir_2': [7], 'ir_4': [9], 'ir_17': [0], 'ir_7': [13], 'ir_18': [1], 'ir_10': [32]}
c_isupper:
{'constant': [0, 1, 25, 65], 'ir_6': [7], 'ir_8': [25], 'ir_10': [1], 'ir_9': [0]}
c_isxdigit:
{'constant': [0, 1], 'ir_6': [7], 'ir_8': [54], 'ir_15': [4], 'ir_23': [0]}
c_tolower:
{'constant': [25, 32, 65], 'ir_6': [7], 'ir_8': [25], 'ir_11': [3], 'ir_13': [32]}
c_toupper:
{'constant': [25, 32, 97], 'ir_6': [7], 'ir_8': [25], 'ir_13': [32]}
close_stdout_set_file_name:
{'constant': []}
close_stdout_set_ignore_EPIPE:
{'constant': []}
close_stdout:
{'string': ['write error', '%s: %s', '%s'], 'constant': [0, 1, 32], 'ir_1': [8], 'ir_2': [-65552], 'ir_3': [24], 'ir_4': [], 'ir_6': [19], 'ir_8': [0], 'ir_9': [1], 'ir_14': [17], 'ir_70': [4], 'ir_71': [-65576], 'ir_31': [20], 'ir_18': [7], 'ir_20': [32]}
set_program_name:
{'string': ['/.libs/', 'lt-'], 'constant': [0, 1, 3, 6, 7], 'ir_4': [8], 'ir_6': [0], 'ir_67': [], 'ir_69': [55], 'ir_70': [1], 'ir_8': [47], 'ir_32': [6], 'ir_15': [4], 'ir_36': [7], 'ir_41': [19], 'ir_53': [3]}
clone_quoting_options:
{'constant': [0], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32], 'ir_12': [56]}
get_quoting_style:
{'constant': [0], 'ir_1': [8]}
set_quoting_style:
{'constant': [0], 'ir_2': [8]}
set_char_quoting:
{'constant': [0, 4, 5, 8], 'ir_5': [8], 'ir_7': [0], 'ir_63': [19]}
set_quoting_flags:
{'constant': [0], 'ir_2': [8]}
set_custom_quoting:
{'constant': [0, 10], 'ir_6': [8], 'ir_8': [0], 's_28': [10]}
quoting_options_from_style:
{'constant': [0, 10], 's_58': [0], 'ir_11': [7], 'ir_13': [10], 'ir_25': [20]}
gettext_quote:
{'string': ['UTF-8', 'GB18030'], 'constant': [0, 9, 96], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32], 'ir_15': [19], 'ir_17': [0], 'ir_44': [5], 'ir_46': [96], 'ir_24': [7], 'ir_26': [9]}
quotearg_buffer:
{'constant': [0], 'ir_8': [8], 'ir_30': [-65624], 'ir_34': [4], 'ir_35': [-65656], 'ir_36': [32]}
quotearg_alloc:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32], 'ir_10': [0]}
quotearg_alloc_mem:
{'constant': [0, 1], 'ir_7': [8], 'ir_9': [0], 'ir_37': [-65608], 'ir_48': [4], 'ir_50': [1], 'ir_73': [-65640], 'ir_74': [32]}
quotearg_free:
{'constant': [1, 16, 256], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 's_18': [1, 2, 3, 256], 'ir_4': [1], 'ir_5': [7], 'ir_6': [1, 2, 3], 'ir_14': [16, 32], 'ir_16': [4], 'ir_19': [0]}
quotearg_n_options:
{'constant': [0, 1, 8, 16, 2147483646], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [80], 'ir_10': [7], 'ir_12': [0], 'ir_13': [1], 'ir_142': [-65624], 's_58': [1, 256], 'ir_22': [], 'ir_37': [5], 'ir_75': [16], 'ir_77': [4], 'ir_213': [-65656], 'ir_214': [32]}
quotearg_n:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_8': [-1]}
quotearg_n_mem:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32]}
quotearg:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_6': [0]}
quotearg_mem:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_8': [0]}
quotearg_n_style:
{'constant': [], 'ir_8': [19], 'ir_9': [0], 'ir_12': [-65608], 'ir_20': [-1], 'ir_23': [20]}
quotearg_n_style_mem:
{'constant': [], 'ir_9': [19], 'ir_10': [0], 'ir_13': [-65608], 'ir_23': [20]}
quotearg_style:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_8': [0]}
quotearg_style_mem:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32], 'ir_10': [0]}
quotearg_char_mem:
{'constant': [], 's_68': [0], 'ir_9': [19], 'ir_21': [-65608], 'ir_22': [1], 'ir_31': [20]}
quotearg_char:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_8': [-1]}
quotearg_colon:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_5': [58]}
quotearg_colon_mem:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_7': [58]}
quotearg_n_style_colon:
{'constant': [], 'ir_8': [19], 'ir_9': [0], 'ir_12': [-65688], 'ir_23': [-65608], 'ir_24': [1], 'ir_25': [58], 'ir_31': [-1], 'ir_34': [20]}
quotearg_n_custom:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32], 'ir_11': [-1]}
quotearg_n_custom_mem:
{'constant': [], 's_78': [0], 'ir_10': [19], 'ir_23': [-65608], 'ir_32': [20]}
quotearg_custom:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32], 'ir_10': [0]}
quotearg_custom_mem:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32], 'ir_13': [0]}
quote_n_mem:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32]}
quote_mem:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_8': [0]}
quote_n:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_7': [-1]}
quote:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_6': [0]}
version_etc_arn:
{'string': ['%s (%s) %s\n', '%s %s\n', '(C)', 'Copyright %s %d Free Software Foundation, Inc.', 'License GPLv3+: GNU GPL version 3 or later <%s>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n', 'Written by %s.\n', 'Written by %s and %s.\n', 'Written by %s, %s, and %s.\n', 'Written by %s, %s, %s,\nand %s.\n', 'Written by %s, %s, %s,\n%s, and %s.\n', 'Written by %s, %s, %s,\n%s, %s, and %s.\n', 'Written by %s, %s, %s,\n%s, %s, %s, and %s.\n', 'Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n', 'Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n', 'Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n'], 'constant': [0, 4], 'ir_14': [8], 'ir_16': [0], 'ir_40': [2020], 'ir_46': [10], 'ir_59': [9], 'ir_131': [4], 'ir_114': [-65672], 'ir_123': [-65720], 'ir_124': [48], 'ir_472': [-65720, -65672], 'ir_481': [-65752, -65704], 'ir_482': [32], 'ir_419': [-65736, -65688], 'ir_420': [16], 'ir_297': [-65768, -65720]}
version_etc_ar:
{'constant': [0, 1, 3], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [64], 's_48': [0, 1, 2], 'ir_9': [0, 8, 16], 'ir_16': [20], 'ir_18': [0], 'ir_32': [0, 1]}
version_etc_va:
{'constant': [0, 1, 3, 8, 9, 47, 96], 's_a8': [0, 1], 'ir_10': [19], 'ir_11': [0], 'ir_14': [8], 'ir_16': [9], 'ir_19': [7], 'ir_21': [47], 'ir_77': [-65640], 'ir_31': [4], 'ir_49': [20]}
version_etc:
{'constant': [0], 'ir_10': [17], 's_f8': [-65720, -65528, 32, 48], 'ir_23': [19], 'ir_34': [-65752], 'ir_37': [20]}
emit_bug_reporting_address:
{'string': ['Report bugs to: %s\n', '%s home page: <%s>\n', 'General help using GNU software: <%s>\n'], 'constant': [], 'ir_2': [10], 'ir_6': [0]}
xnmalloc:
{'constant': [0, 1], 'ir_5': [0], 'ir_7': [48], 'ir_13': [1], 'ir_15': [20], 'ir_24': [17], 'ir_28': [52]}
xnrealloc:
{'constant': [0, 1], 'ir_6': [0], 'ir_8': [48], 'ir_14': [1], 'ir_16': [20], 'ir_25': [17], 'ir_29': [52]}
x2nrealloc:
{'constant': [0, 1, 128], 'ir_8': [8], 'ir_10': [0], 'ir_55': [48], 'ir_83': [52], 'ir_61': [1], 'ir_63': [20], 'ir_72': [17]}
xcharalloc:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16]}
xmalloc:
{'constant': [0], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32]}
xrealloc:
{'constant': [0], 'ir_5': [8]}
x2realloc:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_7': [1]}
xzalloc:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_5': [1]}
xcalloc:
{'constant': [0, 1], 'ir_5': [0], 'ir_7': [48], 'ir_13': [1], 'ir_15': [20], 'ir_24': [17], 'ir_31': [8]}
xmemdup:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16]}
xstrdup:
{'constant': [1], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16]}
xalloc_die:
{'string': ['memory exhausted', '%s'], 'constant': [], 'ir_6': [0], 'ir_7': [1]}
rpl_mbrtowc:
{'constant': [-3, 0, 1], 's_48': [-65564], 'ir_12': [0], 'ir_13': [8], 'ir_25': [-3], 'ir_51': [20], 'ir_37': [17], 'ir_47': [1]}
str2signum:
{'string': ['RTMIN', 'RTMAX'], 'constant': [-1, 0, 1, 2, 4, 5, 9, 12, 34, 48, 63, 64], 's_58': [0, 1, 2], 'ir_17': [7], 'ir_19': [9], 'ir_179': [-65584], 'ir_181': [10], 'ir_186': [17], 'ir_188': [0], 'ir_22': [34], 'ir_189': [8], 'ir_191': [64], 'ir_192': [-1], 'ir_202': [20], 'ir_38': [4], 'ir_39': [0, 12], 'ir_46': [19], 'ir_67': [32], 'ir_69': [0, 6], 'ir_72': [1, 2], 'ir_78': [5], 'ir_174': [3]}
str2sig:
{'constant': [-1, 0], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_11': [19], 'ir_13': [0], 'ir_15': [-1]}
sig2str:
{'string': ['%+d'], 'constant': [-1, 0, 1, 2, 4, 5, 12, 34, 78, 88, 'RTMA', 'RTMI'], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [48], 's_38': [0, 1, 2, 78, 88], 'ir_5': [7], 'ir_6': [0, 1, 2], 'ir_7': [34], 'ir_22': [0, 12], 'ir_23': [1, 2], 'ir_49': [4], 'ir_57': [0], 'ir_70': [-1]}
c_strcasecmp:
{'constant': [0, 1], 'ir_9': [8], 'ir_52': [0], 'ir_58': [4], 'ir_59': [-65592], 'ir_60': [32], 'ir_18': [5]}
close_stream:
{'constant': [0, 1, 9], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32], 'ir_6': [20], 'ir_8': [0], 'ir_12': [19], 'ir_22': [5], 'ir_49': [17], 'ir_53': [-1], 'ir_35': [7], 'ir_37': [9]}
hard_locale:
{'string': ['C', 'POSIX', 'C', 'POSIX'], 'constant': [0, 1], 's_128': [], 'ir_6': [19], 'ir_7': [0], 'ir_10': [-65816], 'ir_12': [257], 'ir_49': [20], 'ir_38': [1]}
locale_charset:
{'constant': [0], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16], 'ir_3': [14], 'ir_12': [17]}
setlocale_null_androidfix:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32], 'ir_5': [0]}
setlocale_null_unlocked:
{'constant': [0, 1, 22], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [48], 'ir_10': [0], 'ir_55': [22], 'ir_40': [34], 'ir_29': [4]}
setlocale_null_r:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32]}
setlocale_null:
{'constant': [], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [16]}
rpl_fclose:
{'constant': [-1, 0], 'ir_0': [8], 'ir_1': [-65544], 'ir_2': [32], 'ir_6': [7], 'ir_8': [0], 'ir_11': [19], 'ir_16': [1], 'ir_21': [-1]}
rpl_fflush:
{'constant': [0], 'ir_4': [8], 'ir_9': [19]}
rpl_fseeko:
{'constant': [-17, -1, 0], 'ir_10': [8], 'ir_27': [20], 'ir_29': [0], 'ir_44': [-1], 'ir_47': [19]}
__libc_csu_init:
{'constant': [0, 1, 8], 'ir_6': [-443987883], 'ir_18': [36], 'ir_19': [1], 'ir_20': [2], 'ir_21': [20], 'ir_23': [0], 'ir_24': [19], 'ir_27': [0, 1, 2], 'ir_52': [4], 'ir_53': [-65592], 'ir_54': [8], 'ir_34': [1, 2]}
__libc_csu_fini:
{'constant': []}
atexit:
{'constant': [], 'ir_0': [69251080], 'ir_1': [19], 'ir_2': [0]}
_fini:
{'constant': [], 'ir_3': [4], 'ir_4': [-65544], 'ir_5': [8]}
