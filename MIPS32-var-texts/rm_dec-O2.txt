_init:
{'constant': [0, 165188]}
sub_401bd4:
{'constant': []}
sub_401bf8:
{'constant': []}
_ftext:
{'string': ['coreutils', '/usr/local/share/locale', 'coreutils', '%s: remove %llu argument? ', '%s: remove %llu arguments? ', '%s: remove %llu argument recursively? ', '%s: remove %llu arguments recursively? ', '--interactive', 'unrecognized --preserve-root argument: %s', 'unrecognized --preserve-root argument: %s', 'missing operand', '--no-preserve-root', 'you may not abbreviate the --no-preserve-root option', 'failed to get attributes of %s', 'failed to get attributes of %s'], 'constant': [-131, -130, -1, 0, 1, 2, 3, 4, 5, 6, 31, 73, 74, 82, 100, 102, 106, 114, 128, 129, 130, 131, 132, 344, 371, 548, 968, 1836, 7956, 9152], 'ir_0': [], 'ir_13': [1], 'ir_15': [0], 'ir_29': [6], 'ir_58': ['forc'], 'ir_63': [-1], 'ir_382': [4], 'ir_262': [3], 'ir_67': [129], 'ir_596': [5], 'ir_181': [100], 'ir_69': [131], 'ir_204': [-130], 'ir_182': [102], 'ir_71': [128], 'ir_544': [371], 'ir_183': [82], 'ir_124': [132], 'ir_175': [114], 'ir_81': ['neve'], 'ir_93': [2]}
__start:
{'constant': []}
sub_40230c:
{'constant': [-8, 16, 20, 24, 32], 'ir_0': [], 'ir_6': [-8]}
hlt:
{'constant': []}
deregister_tm_clones:
{'constant': [0, 1, 24352], 'ir_4': [1], 'ir_6': []}
register_tm_clones:
{'constant': [0, 24352], 'ir_4': [0], 'ir_9': []}
__do_global_dtors_aux:
{'constant': [0, 1, 2, 4, 7916, 9136, 9140], 'ir_1': [], 'ir_6': [0], 'ir_16': [1], 'ir_20': [4, 8], 'ir_24': [2, 3]}
frame_dummy:
{'constant': [0, 24352], 'ir_2': [0], 'ir_3': []}
select_plural:
{'constant': [0, 24352, 1000000], 'ir_1': [], 'ir_8': [0], 'ir_6': [1000000]}
rm_option_init:
{'constant': [0, 4], 'ir_0': [], 'ir_2': [4], 'ir_7': [0]}
diagnose_leading_hyphen:
{'string': ["Try '%s ./%s' to remove the file %s.\n"], 'constant': [0, 1, 2, 3, 4, 45], 'ir_0': [], 'ir_14': [0], 'ir_19': [1, 2], 'ir_20': [45], 'ir_35': [2], 'ir_49': [5], 'ir_54': [3], 'ir_56': [1], 'ir_62': [4]}
emit_ancillary_info.constprop.0:
{'string': ['rm', '\n%s online help: <%s>\n', '\n%s online help: <%s>\n', 'en_', '\n%s online help: <%s>\n', '\n%s online help: <%s>\n', 'en_', 'Full documentation <%s%s>\n', 'Full documentation <%s%s>\n', "or available locally via: info '(coreutils) %s%s'\n", "or available locally via: info '(coreutils) %s%s'\n", 'Report any translation bugs to <https://translationproject.org/team/>\n', 'Full documentation <%s%s>\n', 'Full documentation <%s%s>\n', "or available locally via: info '(coreutils) %s%s'\n", "or available locally via: info '(coreutils) %s%s'\n"], 'constant': [0, 1, 3, 4, 5, 8, 12, 16, 1880, 1908], 'ir_0': [], 'ir_7': ['sha2', 'sha3'], 'ir_24': [0], 'ir_50': [5], 'ir_59': [1], 'ir_71': [3]}
usage:
{'string': ['Usage: %s [OPTION]... [FILE]...\n', 'Remove (unlink) the FILE(s).\n\n  -f, --force           ignore nonexistent files and arguments, never prompt\n  -i                    prompt before every removal\n', '  -I                    prompt once before removing more than three files, or\n                          when removing recursively; less intrusive than -i,\n                          while still giving protection against most mistakes\n      --interactive[=WHEN]  prompt according to WHEN: never, once (-I), or\n                          always (-i); without WHEN, prompt always\n', '      --one-file-system  when removing a hierarchy recursively, skip any\n                          directory that is on a file system different from\n                          that of the corresponding command line argument\n', "      --no-preserve-root  do not treat '/' specially\n      --preserve-root[=all]  do not remove '/' (default);\n                              with 'all', reject any command line argument\n                              on a separate device from its parent\n", '  -r, -R, --recursive   remove directories and their contents recursively\n  -d, --dir             remove empty directories\n  -v, --verbose         explain what is being done\n', '      --help     display this help and exit\n', '      --version  output version information and exit\n', '\nBy default, rm does not remove directories.  Use the --recursive (-r or -R)\noption to remove each listed directory, too, along with all of its contents.\n', "\nTo remove a file whose name starts with a '-', for example '-foo',\nuse one of these commands:\n  %s -- -foo\n\n  %s ./-foo\n", '\nNote that if you use rm to remove a file, it might be possible to recover\nsome of its contents, given sufficient expertise and/or time.  For greater\nassurance that the contents are truly unrecoverable, consider using shred.\n', "Try '%s --help' for more information.\n"], 'constant': [0], 'ir_0': [], 'ir_27': [5], 'ir_32': [1]}
dot_or_dotdot:
{'constant': [0, 1, 2, 46], 'ir_3': [0], 'ir_6': [1]}
cache_stat_init:
{'constant': [-1]}
nonexistent_file_errno:
{'constant': [0, 1, 20, 21, 22], 'ir_0': [20], 'ir_9': [1], 'ir_3': [22], 'ir_6': [2], 'ir_11': [0], 'ir_5': [88]}
mark_ancestor_dirs:
{'constant': [-2147483648, 0, 1], 'ir_4': [1]}
readdir_ignoring_dot_and_dotdot:
{'constant': [0, 19], 'ir_0': [], 'ir_7': [1076372879]}
is_empty_dir:
{'constant': [-2147483648, 0, 1, 198784], 'ir_0': [], 'ir_1': [198784], 'ir_47': [0]}
fts_skip_tree:
{'constant': [], 'ir_2': [4]}
ignorable_missing.isra.0:
{'constant': [0]}
excise:
{'string': ['removed %s\n', 'removed %s\n', 'removed directory %s\n', 'removed directory %s\n'], 'constant': [0, 1, 2, 4, 5, 13, 17, 20, 30, 93, 512, 1028], 'ir_0': [], 'ir_11': [0], 'ir_65': [30], 'ir_99': [2], 'ir_28': [5], 'ir_47': [4], 'ir_50': [1], 'ir_111': [13], 'ir_105': [17]}
cache_fstatat.constprop.1:
{'constant': [-2147483648, -2, -1, 0, 31], 'ir_0': [], 'ir_5': [-1], 'ir_11': [256], 'ir_19': [0], 'ir_25': [-2]}
write_protected_non_symlink:
{'constant': [-1, 0, 1, 40960, 61440], 'ir_0': [], 'ir_37': [0], 'ir_52': [-1], 'ir_21': [40960], 'ir_30': [512], 'ir_31': [2], 'ir_40': [13], 'ir_42': [1]}
prompt:
{'string': ['%s: descend into write-protected directory %s? ', '%s: descend into directory %s? ', '%s: remove write-protected %s %s? ', '%s: remove %s %s? '], 'constant': [-2147483648, 0, 1, 2, 3, 4, 5, 21, 16384, 40960, 61440], 'ir_0': [], 'ir_24': [2], 'ir_26': [4], 'ir_41': [0], 'ir_29': ['cntl'], 'ir_52': [5], 'ir_224': [3], 'ir_151': [-1606933108], 'ir_94': [16384], 'ir_106': [21], 'ir_190': [1]}
rm_fts:
{'string': ["skipping %s, since it's on a different device", "skipping %s, since it's on a different device", 'traversal failed: %s', 'traversal failed: %s', 'WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n', 'WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n', 'cannot remove %s', 'cannot remove %s', 'unexpected failure: fts_info=%d: %s\nplease report to %s', 'unexpected failure: fts_info=%d: %s\nplease report to %s', 'refusing to remove %s or %s directory: skipping %s', 'refusing to remove %s or %s directory: skipping %s', '..', '..', 'it is dangerous to operate recursively on %s (same as %s)', 'it is dangerous to operate recursively on %s (same as %s)', 'it is dangerous to operate recursively on %s', 'it is dangerous to operate recursively on %s', 'use --no-preserve-root to override this failsafe', 'failed to stat %s: skipping %s', 'failed to stat %s: skipping %s', 'and --preserve-root=all is in effect'], 'constant': [0, 1, 2, 3, 4, 5, 6, 14, 21, 93, 604, 1436, 1888], 'ir_0': [], 'ir_29': [5], 'ir_32': [0], 'ir_17': [1006960705], 'ir_33': [3], 'ir_71': [6], 'ir_8': [4], 'ir_89': [0, 1], 'ir_75': [1], 'ir_135': [21], 'ir_319': [2], 'ir_146': [93]}
rm:
{'string': ['fts_read failed', 'fts_close failed'], 'constant': [0, 2, 3, 4, 536, 600], 'ir_0': [], 'ir_149': [2], 'ir_13': [536], 'ir_16': [0], 'ir_18': [2, 3, 4], 'ir_19': [4], 'ir_20': [3], 'ir_99': [5], 'ir_88': [609], 'ir_119': [2, 4], 'ir_44': [0, 6], 'ir_47': [3, 4]}
__argmatch_die:
{'constant': [], 'ir_3': [1]}
argmatch:
{'constant': [-2, -1, 0, 1, 4], 'ir_0': [], 'ir_107': [-1], 'ir_26': [0, 1, 2], 'ir_73': [1, 2], 'ir_104': [0], 'ir_95': [0, 1], 'ir_59': [1]}
argmatch_invalid:
{'string': ['ambiguous argument %s for %s', 'invalid argument %s for %s'], 'constant': [-1], 'ir_0': [], 'ir_21': [5], 'ir_24': [0], 'ir_34': [8], 'ir_38': [1]}
argmatch_valid:
{'string': ['Valid arguments are:'], 'constant': [0, 1, 4, 5, 10], 'ir_0': [], 'ir_15': [5], 'ir_16': [0], 'ir_107': [10], 'ir_35': [0, 1, 2], 'ir_67': [1], 'ir_49': [1, 2]}
__xargmatch_internal:
{'constant': [-2147483648, -1]}
argmatch_to_argument:
{'constant': [0, 4], 'ir_0': []}
close_stdin_set_file_name:
{'constant': []}
close_stdin:
{'string': ["rts with a '-', for example '-foo',\nuse one of these commands:\n  %s -- -foo\n\n  %s ./-foo\n", '%s: %s', '%s'], 'constant': [0, 1, 2060], 'ir_0': [], 'ir_12': [1], 'ir_14': [0], 'ir_32': [5], 'ir_34': [-1606933108]}
close_stdout_set_file_name:
{'constant': []}
close_stdout_set_ignore_EPIPE:
{'constant': []}
close_stdout:
{'string': ['%s: %s', '%s'], 'constant': [0, 5, 32, 2088], 'ir_0': [], 'ir_10': [0], 'ir_29': [5], 'ir_31': [-1090511812], 'ir_71': [1], 'ir_15': [32]}
last_component:
{'constant': [0, 1, 47], 'ir_2': [47], 'ir_11': [0], 'ir_17': [1]}
base_len:
{'constant': [1, 2, 47], 'ir_0': [], 'ir_10': [47], 'ir_14': [1]}
file_type:
{'constant': [0, 4096, 8192, 16384, 24576, 32768, 40960, 49152, 61440], 'ir_3': [32768], 'ir_2': [], 'ir_46': [5], 'ir_7': [40960], 'ir_54': [0], 'ir_8': [24576], 'ir_9': [8192], 'ir_10': [4096], 'ir_11': [49152]}
file_name_concat:
{'constant': [0], 'ir_0': []}
mfile_name_concat:
{'constant': [0, 1, 46, 47], 'ir_0': [], 'ir_16': [0], 'ir_40': [47]}
set_program_name:
{'string': ["rts with a '-', for example '-foo',\nuse one of these commands:\n  %s -- -foo\n\n  %s ./-foo\n", 'lt-'], 'constant': [0, 1, 3, 4, 6, 7, 47, 55, 2292], 'ir_0': [], 'ir_58': [55], 'ir_59': [1], 'ir_8': [47], 'ir_22': [7], 'ir_33': [3]}
quoting_options_from_style:
{'constant': [0, 10], 'ir_0': [10], 'ir_5': []}
strcaseeq9:
{'constant': [1, 9], 'ir_0': []}
strcaseeq8:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_31': [0], 'ir_41': [1]}
strcaseeq7:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_34': [0], 'ir_47': [1]}
strcaseeq6:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_36': [0], 'ir_52': [1]}
strcaseeq5:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_38': [0], 'ir_56': [1]}
strcaseeq4:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_40': [0], 'ir_60': [1]}
strcaseeq3:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_41': [0], 'ir_61': [1]}
strcaseeq2:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_42': [0], 'ir_62': [1]}
strcaseeq1:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_43': [0], 'ir_63': [1]}
strcaseeq0.constprop.0:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_41': [0], 'ir_63': [1]}
gettext_quote:
{'constant': [0, 9, 96], 'ir_0': [], 'ir_3': [5], 'ir_8': [0], 'ir_21': [56], 'ir_25': [84], 'ir_26': [85], 'ir_27': [70], 'ir_31': [48], 'ir_47': [51], 'ir_49': [66], 'ir_50': [49], 'ir_51': [71], 'ir_33': [96], 'ir_55': [9]}
sub_405d7c:
{'constant': []}
sub_406148:
{'constant': [], 'ir_0': [0]}
sub_406158:
{'constant': [], 'ir_0': [-1], 'ir_1': [0]}
sub_406180:
{'constant': [], 'ir_0': [2], 'ir_2': [0]}
sub_4061bc:
{'constant': [], 'ir_0': [2], 'ir_1': [0]}
sub_4061dc:
{'constant': [], 'ir_0': [2], 'ir_1': [0]}
sub_40624c:
{'constant': [], 'ir_0': [1], 'ir_1': [0]}
sub_406260:
{'constant': [], 'ir_0': [0]}
sub_406270:
{'constant': []}
sub_406278:
{'constant': [], 'ir_0': [0]}
sub_406284:
{'constant': [], 'ir_0': [102]}
sub_406290:
{'constant': [], 'ir_0': [118]}
sub_40629c:
{'constant': [], 'ir_0': [110]}
sub_4062a8:
{'constant': [], 'ir_0': [116]}
sub_4062b0:
{'constant': [], 'ir_0': [0]}
sub_4062b8:
{'constant': [], 'ir_1': [0]}
sub_4067c8:
{'constant': [], 'ir_0': [1]}
sub_4067d0:
{'constant': [], 'ir_1': [1]}
sub_4067dc:
{'constant': [], 'ir_0': [1]}
sub_4067e4:
{'constant': [], 'ir_0': [1]}
quotearg_n_options:
{'constant': [-2147483648, 0, 1, 3, 4, 8, 8368, 8384, 8388, 65535], 'ir_0': [], 'ir_42': [0], 'ir_49': [256]}
clone_quoting_options:
{'constant': [0, 48], 'ir_0': [], 'ir_20': [48]}
get_quoting_style:
{'constant': [0]}
set_quoting_style:
{'constant': [0]}
set_char_quoting:
{'constant': [0, 1, 2, 5, 8, 31, 255]}
set_quoting_flags:
{'constant': [0]}
set_custom_quoting:
{'constant': [0, 10, 40, 44], 'ir_0': [], 'ir_7': [10]}
quotearg_buffer:
{'constant': [0], 'ir_0': []}
quotearg_alloc_mem:
{'constant': [0, 1], 'ir_0': [], 'ir_30': [0]}
quotearg_alloc:
{'constant': [], 'ir_2': [0]}
quotearg_free:
{'constant': [1, 2, 8, 12, 256, 8368, 8384], 'ir_2': [], 'ir_11': [1], 'ir_15': [2, 3, 4], 'ir_18': [0, 1, 63], 'ir_36': [256]}
quotearg_n:
{'constant': [], 'ir_1': [-1]}
quotearg_n_mem:
{'constant': []}
quotearg:
{'constant': [], 'ir_2': [0]}
quotearg_mem:
{'constant': [], 'ir_4': [0]}
quotearg_n_style:
{'constant': [], 'ir_14': [0], 'ir_16': [-1]}
quotearg_n_style_mem:
{'constant': [], 'ir_17': [0], 'ir_11': [-1]}
quotearg_style:
{'constant': [], 'ir_4': [0], 'ir_1': [-1]}
quotearg_style_mem:
{'constant': [], 'ir_6': [0]}
quotearg_char_mem:
{'constant': [16], 'ir_0': [], 'ir_17': [0], 'ir_27': [1], 'ir_12': [-1]}
quotearg_char:
{'constant': [], 'ir_2': [-1]}
quotearg_colon:
{'constant': [], 'ir_0': [58]}
quotearg_colon_mem:
{'constant': [], 'ir_0': [58]}
quotearg_n_style_colon:
{'constant': [16], 'ir_0': [], 'ir_16': [0], 'ir_30': [1], 'ir_31': [58], 'ir_34': [-1]}
quotearg_n_custom_mem:
{'constant': [16], 'ir_0': [], 'ir_18': [0]}
quotearg_n_custom:
{'constant': [], 'ir_0': [-1]}
quotearg_custom:
{'constant': [], 'ir_6': [0]}
quotearg_custom_mem:
{'constant': [], 'ir_9': [0]}
quote_n_mem:
{'constant': []}
quote_mem:
{'constant': [], 'ir_4': [0]}
quote_n:
{'constant': [], 'ir_0': [-1]}
quote:
{'constant': [], 'ir_2': [0]}
get_root_dev_ino:
{'constant': [0], 'ir_0': []}
statat:
{'constant': [], 'ir_3': [0]}
lstatat:
{'constant': [], 'ir_3': [256]}
version_etc_arn:
{'string': ['(C)', 'License GPLv3+: GNU GPL version 3 or later <%s>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n', 'Written by %s, %s, %s,\n%s, and %s.\n', 'Written by %s, %s, %s,\n%s, %s, and %s.\n', 'Written by %s, %s, %s,\nand %s.\n', 'Written by %s, %s, %s,\n%s, %s, %s, and %s.\n', 'Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n', 'Written by %s and %s.\n', 'Written by %s.\n', 'Written by %s, %s, and %s.\n'], 'constant': [0, 1, 2, 5, 10, 2020], 'ir_0': [], 'ir_24': [1], 'ir_38': [5], 'ir_41': [0], 'ir_42': [2020], 'ir_50': [10]}
version_etc_ar:
{'constant': [0, 1, 4], 'ir_4': [1, 2, 3]}
version_etc_va:
{'constant': [0, 1, 4], 'ir_0': [], 'ir_5': [0, 1, 2], 'ir_7': [10], 'ir_13': [1, 2], 'ir_24': [0]}
version_etc:
{'constant': [], 'ir_6': [0]}
emit_bug_reporting_address:
{'string': ['Report bugs to: %s\n', '%s home page: <%s>\n', 'General help using GNU software: <%s>\n'], 'constant': [], 'ir_2': [10], 'ir_10': [5], 'ir_14': [0], 'ir_17': [1]}
can_write_any_file:
{'constant': [0, 1, 9521], 'ir_2': [], 'ir_5': [0]}
xmalloc:
{'constant': [0], 'ir_0': []}
xnmalloc:
{'constant': [-2147483648, 0], 'ir_6': []}
xcharalloc:
{'constant': []}
xrealloc:
{'constant': [0], 'ir_0': []}
xnrealloc:
{'constant': [-2147483648, 0], 'ir_6': []}
x2realloc:
{'constant': [], 'ir_0': [1]}
xcalloc:
{'constant': [-2147483648, 0], 'ir_6': []}
xzalloc:
{'constant': [], 'ir_0': [1]}
xmemdup:
{'constant': []}
xstrdup:
{'constant': []}
xalloc_die:
{'string': ['memory exhausted', '%s'], 'constant': [], 'ir_3': [5], 'ir_7': [0], 'ir_10': [1]}
xfts_open:
{'constant': [0, 22, 512], 'ir_0': [], 'ir_12': [22], 'ir_24': [41]}
yesno:
{'constant': [0, 1, 10], 'ir_0': [], 'ir_10': [0], 'ir_16': [10]}
rpl_fflush:
{'constant': [0], 'ir_0': []}
rpl_fseeko:
{'constant': [-17, -1, 0], 'ir_0': [], 'ir_33': [-1], 'ir_36': [0]}
AD_compare:
{'constant': [0, 1], 'ir_18': [0]}
AD_hash:
{'constant': [], 'ir_10': [0]}
dev_type_hash:
{'constant': [], 'ir_10': [0]}
dev_type_compare:
{'constant': [1]}
fts_compare_ino:
{'constant': [-1, 0, 1], 'ir_15': [-1], 'ir_16': [1], 'ir_21': [0]}
fts_maxarglen:
{'constant': [0, 1, 4], 'ir_0': [], 'ir_23': [1], 'ir_8': [0]}
fts_set_stat_required:
{'constant': [0, 1, 2, 11, 24352], 'ir_2': [11], 'ir_3': [], 'ir_5': [1], 'ir_8': [2], 'ir_9': [0]}
fts_stat:
{'constant': [-1, 0, 1, 2, 3, 5, 8, 10, 12, 13, 32, 46, 72, 160, 256, 16384, 32768, 40960, 61440, 3014656, 16776960], 'ir_0': [], 'ir_26': [256], 'ir_67': [40960], 'ir_68': [3], 'ir_43': [2], 'ir_91': [-1], 'ir_78': [12], 'ir_125': [160], 'ir_126': [0], 'ir_94': [46], 'ir_129': [10], 'ir_114': [1], 'ir_56': [13], 'ir_108': [5], 'ir_98': [3014656]}
fts_sort:
{'constant': [0, 1, 2, 4, 40, 1073741824], 'ir_0': [], 'ir_45': [4]}
fts_alloc:
{'constant': [-8, 0, 3, 232, 240], 'ir_0': []}
fts_lfree:
{'constant': [0], 'ir_1': []}
fd_ring_clear:
{'constant': [0], 'ir_0': []}
dirent_inode_sort_may_be_useful:
{'constant': [-11337728, -11298172, 0, 1, 19778, 26985, 16914836], 'ir_4': [], 'ir_13': [0], 'ir_6': [-11337728, -11317950], 'ir_8': [-11317950], 'ir_11': [1]}
leaf_optimization:
{'constant': [-11337728, 0, 1, 2, 18803, 19778, 26985, 40864, 40865, 'Re\x00\x00', 'SFAO', 'XFSB'], 'ir_4': [40865], 'ir_26': [0], 'ir_6': [], 'ir_18': [26985], 'ir_19': [-11337728, -11317950], 'ir_20': [-11317950], 'ir_17': [2], 'ir_27': [1]}
set_stat_type.isra.0:
{'constant': [0, 1, 2, 12, 5088], 'ir_10': [0]}
fts_padjust.isra.1:
{'constant': [-2147483648, 0, 232]}
fts_palloc.isra.2:
{'constant': [0, 1, 78, 256], 'ir_2': [], 'ir_36': [78], 'ir_38': [0], 'ir_18': [1], 'ir_28': [0, 1]}
fts_load.isra.4:
{'constant': [0, 1, 232], 'ir_0': [], 'ir_18': [47]}
rpl_fts_set:
{'constant': [0, 1, 5, 22], 'ir_2': [0], 'ir_6': [], 'ir_11': [22], 'ir_13': [1]}
exchange:
{'constant': [0, 1, 2, 4]}
process_long_option:
{'string': ["%s: option '%s%s' is ambiguous; possibilities:", "%s: option '%s%s' is ambiguous; possibilities:", "%s: option '%s%s' is ambiguous\n", "%s: option '%s%s' is ambiguous\n", "%s: option '%s%s' requires an argument\n", "%s: option '%s%s' requires an argument\n", "%s: option '%s%s' doesn't allow an argument\n", "%s: option '%s%s' doesn't allow an argument\n", "%s: unrecognized option '%s%s'\n", "%s: unrecognized option '%s%s'\n"], 'constant': [-1, 0, 1, 2, 5, 10, 16, 45, 58, 61, 63], 'ir_0': [], 'ir_33': [0], 'ir_20': [61], 'ir_35': [0, 1], 'ir_390': [45], 'ir_437': [63], 'ir_419': [5], 'ir_50': [1], 'ir_56': [-1], 'ir_406': [-1, 0], 'ir_212': [10]}
_getopt_initialize.isra.0:
{'string': ["rts with a '-', for example '-foo',\nuse one of these commands:\n  %s -- -foo\n\n  %s ./-foo\n"], 'constant': [0, 1, 2, 43, 45, 5344], 'ir_0': [], 'ir_13': [43], 'ir_36': [1]}
_getopt_internal_r:
{'string': ['--', "%s: invalid option -- '%c'\n", "%s: option requires an argument -- '%c'\n", "%s: option requires an argument -- '%c'\n"], 'constant': [-1, 0, 1, 2, 4, 5, 43, 45, 58, 59, 63, 87, 255, 5360, 5440], 'ir_0': [], 'ir_363': [-1], 'ir_23': [45], 'ir_33': [43], 'ir_27': [50337934], 'ir_55': [1], 'ir_185': [87], 'ir_307': [5], 'ir_309': [0], 'ir_347': [63], 'ir_188': [59], 'ir_250': [58]}
rpl_getopt_internal:
{'constant': [8408], 'ir_2': [], 'ir_0': [1], 'ir_18': [0]}
rpl_getopt:
{'constant': [], 'ir_0': [1], 'ir_3': [0]}
rpl_getopt_long:
{'constant': []}
_getopt_long_r:
{'constant': []}
rpl_getopt_long_only:
{'constant': []}
_getopt_long_only_r:
{'constant': []}
rpl_mbrtowc:
{'constant': [-2, 0, 1], 'ir_0': [], 'ir_8': [0], 'ir_18': [1], 'ir_11': [-2], 'ir_27': [-1606933108]}
c_isalnum:
{'constant': [0, 1, 10, 26, 48, 65, 91, 97], 'ir_12': [0], 'ir_10': [1]}
c_isalpha:
{'constant': [0, 1, 65, 91, 97], 'ir_9': [0], 'ir_11': [1]}
c_isascii:
{'constant': [128]}
c_isblank:
{'constant': [1, 9, 32], 'ir_0': [32], 'ir_6': [1]}
c_iscntrl:
{'constant': [-2147483648, 0, 1, 32], 'ir_5': [0], 'ir_7': [1], 'ir_2': [127]}
c_isdigit:
{'constant': [10, 48]}
c_isgraph:
{'constant': [33, 94]}
c_islower:
{'constant': [26, 97]}
c_isprint:
{'constant': [32, 95]}
c_ispunct:
{'constant': [0, 1, 4, 15, 33, 58, 65, 91, 97, 123], 'ir_16': [0], 'ir_14': [1]}
c_isspace:
{'constant': [0, 1, 9, 24, 31], 'ir_11': [0]}
c_isupper:
{'constant': [26, 65]}
c_isxdigit:
{'constant': [0, 1, 2, 48, 55], 'ir_11': [0]}
c_tolower:
{'constant': [0, 26, 32, 65]}
c_toupper:
{'constant': [0, 26, 32, 97]}
c_strcasecmp:
{'constant': [0, 1, 255, 24352], 'ir_2': [], 'ir_43': [0]}
close_stream:
{'constant': [-1, 0, 9], 'ir_0': [], 'ir_36': [-1]}
is_zero_or_power_of_two:
{'constant': [1]}
cycle_check_init:
{'constant': [0, 9827862], 'ir_1': [0], 'ir_3': []}
cycle_check:
{'constant': [0, 1, 9827862], 'ir_0': [], 'ir_68': [60], 'ir_13': [1], 'ir_14': [0]}
hard_locale:
{'string': ['POSIX'], 'constant': [0], 'ir_0': [], 'ir_3': [257]}
next_prime:
{'constant': [-1, 0, 1, 2, 10, 11], 'ir_6': [11], 'ir_3': [-1], 'ir_12': [11, 13], 'ir_7': [13, 15], 'ir_13': [11, 13, 15]}
raw_hasher:
{'constant': [], 'ir_8': [3]}
raw_comparator:
{'constant': [1]}
safe_hasher:
{'constant': [0, 3], 'ir_0': []}
free_entry.isra.1:
{'constant': [0]}
hash_find_entry:
{'constant': [0, 1, 36], 'ir_87': [0]}
allocate_entry.isra.2:
{'constant': [0, 24352], 'ir_2': [], 'ir_7': [8]}
transfer_entries:
{'constant': [0, 1, 8, 36], 'ir_85': [1], 'ir_48': [-1090511812], 'ir_76': [0]}
hash_get_n_buckets:
{'constant': []}
hash_get_n_buckets_used:
{'constant': []}
hash_get_n_entries:
{'constant': []}
hash_get_max_bucket_length:
{'constant': [0, 1, 8], 'ir_25': [0], 'ir_4': [0, 1, 2], 'ir_7': [1, 2, 3], 'ir_17': [1, 2], 'ir_9': [2, 3]}
hash_table_ok:
{'constant': [0, 1, 8], 'ir_2': [0, 1], 'ir_28': [0], 'ir_8': [1], 'ir_9': [1, 2, 3], 'ir_14': [2, 3]}
hash_lookup:
{'constant': [0, 1], 'ir_6': [-1090511812], 'ir_12': [0]}
hash_get_first:
{'constant': [0, 8], 'ir_0': [], 'ir_23': [0]}
hash_get_next:
{'constant': [0, 8], 'ir_19': [0]}
hash_get_entries:
{'constant': [0, 1, 2, 4, 8], 'ir_6': [0, 1], 'ir_37': [0], 'ir_13': [1, 2], 'ir_17': [2]}
hash_do_for_each:
{'constant': [0, 1, 8], 'ir_42': [0]}
hash_string:
{'constant': [0, 1, 5], 'ir_2': [0]}
hash_reset_tuning:
{'constant': [0], 'ir_6': []}
hash_initialize:
{'constant': [0, 3, 20], 'ir_0': [], 'ir_24': [40], 'ir_65': [0], 'ir_45': [8]}
hash_clear:
{'constant': [0, 8]}
hash_free:
{'constant': [0, 8], 'ir_0': []}
hash_insert:
{'constant': [-1, 0], 'ir_0': [], 'ir_9': [0], 'ir_11': [-1]}
i_ring_init:
{'constant': [0, 1], 'ir_0': [1]}
i_ring_empty:
{'constant': []}
i_ring_push:
{'constant': [0, 1, 2, 3]}
i_ring_pop:
{'constant': [0, 1, 2, 3], 'ir_0': [], 'ir_18': [1]}
locale_charset:
{'constant': [0], 'ir_0': [], 'ir_5': [14]}
opendirat:
{'constant': [-2147483648, 0, 592000], 'ir_0': [], 'ir_1': [592000], 'ir_35': [0]}
setlocale_null_androidfix:
{'constant': [], 'ir_3': [0]}
setlocale_null_unlocked:
{'constant': [0, 1, 22, 34], 'ir_0': [], 'ir_47': [22], 'ir_19': [34], 'ir_37': [0]}
setlocale_null_r:
{'constant': []}
setlocale_null:
{'constant': []}
fd_safer:
{'constant': [0, 3], 'ir_0': []}
rpl_fclose:
{'constant': [-2147483648, -1, 0], 'ir_0': [], 'ir_18': [0], 'ir_21': [1], 'ir_25': [-1]}
rpl_fcntl_DUPFD:
{'constant': [], 'ir_5': [0]}
rpl_fcntl_DUPFD_CLOEXEC:
{'constant': [-2147483648, -1, 0, 1, 22, 9584], 'ir_2': [], 'ir_8': [0], 'ir_12': [1030], 'ir_44': [-1], 'ir_22': [22], 'ir_24': [1], 'ir_60': [2]}
rpl_fcntl:
{'constant': [0, 1, 3, 4, 10, 11, 24, 25, 1030, 1032, 1033, 1034], 'ir_0': [], 'ir_10': [1030], 'ir_14': [24], 'ir_62': [0], 'ir_18': [3], 'ir_21': [10], 'ir_37': [1025], 'ir_30': [1], 'ir_43': [1034], 'ir_26': [11], 'ir_28': [23]}
rotl64:
{'constant': [0, 1, 31, 32, 63]}
rotr64:
{'constant': [0, 1, 31, 32, 63]}
rotl_sz:
{'constant': [0, 31, 32]}
rotl32:
{'constant': []}
rotr_sz:
{'constant': [31, 32]}
rotr32:
{'constant': []}
rotl16:
{'constant': [0, 15, 31, 65535]}
rotr16:
{'constant': [0, 15, 31, 65535]}
rotl8:
{'constant': [0, 7, 31, 255]}
rotr8:
{'constant': [0, 7, 31, 255]}
dup_safer:
{'constant': [], 'ir_1': [3], 'ir_4': [0]}
__libc_csu_init:
{'constant': [0, 1, 4, 110384], 'ir_24': [0, 1], 'ir_26': [1]}
__libc_csu_fini:
{'constant': []}
atexit:
{'constant': [], 'ir_5': [0]}
stat64:
{'constant': [], 'ir_9': [3]}
fstat64:
{'constant': [], 'ir_9': [3]}
lstat64:
{'constant': [], 'ir_9': [3]}
fstatat64:
{'constant': [], 'ir_14': [3]}
__do_global_ctors_aux:
{'constant': [-1, 4], 'ir_0': [], 'ir_1': [-1], 'ir_10': [0]}
_MIPS_STUBS_:
{'constant': [], 'ir_5': [169]}
sub_40f390:
{'constant': [], 'ir_5': [168]}
sub_40f3a0:
{'constant': [], 'ir_5': [167]}
sub_40f3b0:
{'constant': [], 'ir_5': [166]}
sub_40f3c0:
{'constant': [], 'ir_5': [165]}
sub_40f3d0:
{'constant': [], 'ir_5': [163]}
sub_40f3e0:
{'constant': [], 'ir_5': [161]}
sub_40f3f0:
{'constant': [], 'ir_5': [160]}
sub_40f400:
{'constant': [], 'ir_5': [159]}
sub_40f410:
{'constant': [], 'ir_5': [158]}
sub_40f420:
{'constant': [], 'ir_5': [156]}
sub_40f430:
{'constant': [], 'ir_5': [155]}
sub_40f440:
{'constant': [], 'ir_5': [153]}
sub_40f450:
{'constant': [], 'ir_5': [152]}
sub_40f460:
{'constant': [], 'ir_5': [151]}
sub_40f470:
{'constant': [], 'ir_5': [150]}
sub_40f480:
{'constant': [], 'ir_5': [149]}
sub_40f490:
{'constant': [], 'ir_5': [148]}
sub_40f4a0:
{'constant': [], 'ir_5': [147]}
sub_40f4b0:
{'constant': [], 'ir_5': [146]}
sub_40f4c0:
{'constant': [], 'ir_5': [145]}
sub_40f4d0:
{'constant': [], 'ir_5': [144]}
sub_40f4e0:
{'constant': [], 'ir_5': [143]}
sub_40f4f0:
{'constant': [], 'ir_5': [142]}
sub_40f500:
{'constant': [], 'ir_5': [141]}
sub_40f510:
{'constant': [], 'ir_5': [140]}
sub_40f520:
{'constant': [], 'ir_5': [139]}
sub_40f530:
{'constant': [], 'ir_5': [138]}
sub_40f540:
{'constant': [], 'ir_5': [137]}
sub_40f550:
{'constant': [], 'ir_5': [136]}
sub_40f560:
{'constant': [], 'ir_5': [135]}
sub_40f570:
{'constant': [], 'ir_5': [134]}
sub_40f580:
{'constant': [], 'ir_5': [133]}
sub_40f590:
{'constant': [], 'ir_5': [132]}
sub_40f5a0:
{'constant': [], 'ir_5': [130]}
sub_40f5b0:
{'constant': [], 'ir_5': [129]}
sub_40f5c0:
{'constant': [], 'ir_5': [128]}
sub_40f5d0:
{'constant': [], 'ir_5': [127]}
sub_40f5e0:
{'constant': [], 'ir_5': [126]}
sub_40f5f0:
{'constant': [], 'ir_5': [125]}
sub_40f600:
{'constant': [], 'ir_5': [123]}
sub_40f610:
{'constant': [], 'ir_5': [122]}
sub_40f620:
{'constant': [], 'ir_5': [121]}
sub_40f630:
{'constant': [], 'ir_5': [120]}
sub_40f640:
{'constant': [], 'ir_5': [119]}
sub_40f650:
{'constant': [], 'ir_5': [118]}
sub_40f660:
{'constant': [], 'ir_5': [116]}
sub_40f670:
{'constant': [], 'ir_5': [115]}
sub_40f680:
{'constant': [], 'ir_5': [114]}
sub_40f690:
{'constant': [], 'ir_5': [112]}
sub_40f6a0:
{'constant': [], 'ir_5': [111]}
sub_40f6b0:
{'constant': [], 'ir_5': [110]}
sub_40f6c0:
{'constant': [], 'ir_5': [109]}
sub_40f6d0:
{'constant': [], 'ir_5': [107]}
sub_40f6e0:
{'constant': [], 'ir_5': [106]}
sub_40f6f0:
{'constant': [], 'ir_5': [105]}
sub_40f700:
{'constant': [], 'ir_5': [104]}
sub_40f710:
{'constant': [], 'ir_5': [103]}
sub_40f720:
{'constant': [], 'ir_5': [102]}
sub_40f730:
{'constant': [], 'ir_5': [100]}
sub_40f740:
{'constant': [], 'ir_5': [99]}
sub_40f750:
{'constant': [], 'ir_5': [97]}
sub_40f760:
{'constant': [], 'ir_5': [96]}
sub_40f770:
{'constant': [], 'ir_5': [95]}
sub_40f780:
{'constant': [], 'ir_5': [94]}
sub_40f790:
{'constant': [], 'ir_5': [93]}
sub_40f7a0:
{'constant': [], 'ir_5': [92]}
sub_40f7b0:
{'constant': [], 'ir_5': [91]}
sub_40f7c0:
{'constant': [], 'ir_5': [90]}
sub_40f7d0:
{'constant': [], 'ir_5': [89]}
sub_40f7e0:
{'constant': [], 'ir_5': [88]}
sub_40f7f0:
{'constant': [], 'ir_5': [87]}
_fini:
{'constant': []}
sub_40f830:
{'constant': []}
