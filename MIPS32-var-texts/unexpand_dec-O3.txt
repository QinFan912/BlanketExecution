_init:
{'constant': [0, 138044]}
sub_4015dc:
{'constant': []}
sub_401600:
{'constant': []}
__start:
{'constant': []}
sub_4019bc:
{'constant': [-8, 16, 20, 24, 32], 'ir_0': [], 'ir_6': [-8]}
hlt:
{'constant': []}
deregister_tm_clones:
{'constant': [0, 1, 12512], 'ir_4': [1], 'ir_6': []}
register_tm_clones:
{'constant': [0, 12512], 'ir_4': [0], 'ir_9': []}
__do_global_dtors_aux:
{'constant': [0, 1, 2, 4, 19724, 19728, 20632], 'ir_1': [], 'ir_6': [0], 'ir_16': [1], 'ir_20': [4, 8], 'ir_24': [2, 3]}
frame_dummy:
{'constant': [0, 12512], 'ir_2': [0], 'ir_3': []}
emit_stdin_note:
{'string': ['\nWith no FILE, or when FILE is -, read standard input.\n'], 'constant': [], 'ir_3': [0], 'ir_8': [5]}
emit_mandatory_arg_note:
{'string': ['\nMandatory arguments to long options are mandatory for short options too.\n'], 'constant': [], 'ir_3': [0], 'ir_8': [5]}
emit_ancillary_info.constprop.0:
{'string': ['unexpand', '\n%s online help: <%s>\n', 'en_', '\n%s online help: <%s>\n', 'en_', 'Full documentation <%s%s>\n', "or available locally via: info '(coreutils) %s%s'\n", 'Report any translation bugs to <https://translationproject.org/team/>\n', 'Full documentation <%s%s>\n', "or available locally via: info '(coreutils) %s%s'\n"], 'constant': [0, 8, 16, 27732], 'ir_0': [], 'ir_7': ['sha2', 'sha3'], 'ir_24': [0], 'ir_50': [5], 'ir_59': [1], 'ir_71': [3]}
usage:
{'string': ['Usage: %s [OPTION]... [FILE]...\n', 'Convert blanks in each FILE to tabs, writing to standard output.\n', '  -a, --all        convert all blanks, instead of just initial blanks\n      --first-only  convert only leading sequences of blanks (overrides -a)\n  -t, --tabs=N     have tabs N characters apart instead of 8 (enables -a)\n', '      --help     display this help and exit\n', '      --version  output version information and exit\n', "Try '%s --help' for more information.\n"], 'constant': [0], 'ir_0': [], 'ir_3': [5], 'ir_28': [1]}
to_uchar:
{'constant': [255]}
set_extend_size:
{'string': ["'/' specifier only allowed with the last value"], 'constant': [0, 1, 19668, 19672], 'ir_2': [], 'ir_10': [0], 'ir_15': [1], 'ir_21': [5]}
set_increment_size:
{'string': ["'+' specifier only allowed with the last value"], 'constant': [0, 1, 19676, 19680], 'ir_2': [], 'ir_10': [0], 'ir_15': [1], 'ir_21': [5]}
validate_tab_stops:
{'constant': [0, 1, 5, 8], 'ir_0': [], 'ir_36': [0], 'ir_77': [5], 'ir_8': [1], 'ir_9': [1, 2, 3], 'ir_18': [2, 3]}
add_tab_stop:
{'string': ['tabs are too far apart'], 'constant': [0, 1, 3, 4, 8, 19684, 19688, 19692], 'ir_2': [], 'ir_12': [0], 'ir_34': [8], 'ir_61': [1], 'ir_45': [5]}
finalize_tab_stops:
{'constant': [0, 1], 'ir_2': [], 'ir_7': [0], 'ir_20': [8]}
get_next_tab_column:
{'constant': [0, 1, 3, 8], 'ir_2': [0], 'ir_1': [], 'ir_60': [1]}
set_file_list:
{'constant': [0], 'ir_0': [], 'ir_4': [754974720]}
next_file:
{'string': ['%s', '%s', '%s'], 'constant': [0, 1, 4, 19696, 19700, 19712, 26356], 'ir_0': [], 'ir_95': [0], 'ir_96': [4], 'ir_103': [1], 'ir_192': [341], 'ir_174': [2], 'ir_23': [3], 'ir_144': [8]}
cleanup_file_list_stdin:
{'constant': [0], 'ir_3': [], 'ir_16': [1]}
emit_tab_list_info:
{'string': ['  -t, --tabs=LIST  use comma separated list of tab positions\n', "                     The last specified position can be prefixed with '/'\n                     to specify a tab size to use after the last\n                     explicitly specified tab stop.  Also a prefix of '+'\n                     can be used to align remaining tab stops relative to\n                     the last specified tab stop instead of the first column\n"], 'constant': [], 'ir_3': [5], 'ir_10': [0]}
close_stdout_set_file_name:
{'constant': []}
close_stdout_set_ignore_EPIPE:
{'constant': []}
close_stdout:
{'string': ['%s: %s', '%s'], 'constant': [0, 32, 27744], 'ir_0': [], 'ir_10': [0], 'ir_29': [5], 'ir_31': [1040189476], 'ir_71': [1], 'ir_15': [32]}
fdadvise:
{'constant': []}
fadvise:
{'constant': [0], 'ir_1': []}
set_program_name:
{'string': ['lt-'], 'constant': [0, 1, 4, 6, 7, 25816], 'ir_0': [], 'ir_58': [55], 'ir_59': [1], 'ir_8': [47], 'ir_22': [7], 'ir_33': [3]}
quoting_options_from_style:
{'constant': [0, 10], 'ir_0': [10], 'ir_5': []}
strcaseeq9:
{'constant': [1], 'ir_0': []}
strcaseeq8:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_31': [0], 'ir_41': [1]}
strcaseeq7:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_34': [0], 'ir_47': [1]}
strcaseeq6:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_36': [0], 'ir_52': [1]}
strcaseeq5:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_38': [0], 'ir_56': [1]}
strcaseeq4:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_40': [0], 'ir_60': [1]}
strcaseeq3:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_41': [0], 'ir_61': [1]}
strcaseeq2:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_42': [0], 'ir_62': [1]}
strcaseeq1:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_43': [0], 'ir_63': [1]}
strcaseeq0.constprop.0:
{'constant': [0, 1, 223], 'ir_0': [], 'ir_41': [0], 'ir_63': [1]}
gettext_quote:
{'constant': [0, 9, 96], 'ir_0': [], 'ir_3': [5], 'ir_8': [0], 'ir_21': [56], 'ir_25': [84], 'ir_26': [85], 'ir_27': [70], 'ir_31': [48], 'ir_47': [51], 'ir_49': [66], 'ir_50': [49], 'ir_51': [71], 'ir_33': [96], 'ir_55': [9]}
quotearg_buffer_restyled:
{'constant': [0, 1, 11, 30, 31], 'ir_36': [], 'ir_44': [0], 'ir_80': [1], 'ir_87': [47141], 'ir_211': [0, 1], 'ir_212': [2], 'ir_201': [5], 'ir_133': [10], 'ir_158': [0, 1, 2], 'ir_529': [-1885208448], 'ir_269': [341836449], 'ir_163': [1, 2], 'ir_542': [-1], 'ir_1409': [4], 'ir_1432': [2, 4], 'ir_438': [116], 'ir_279': [114], 'ir_277': [98], 'ir_433': [102], 'ir_395': [97], 'ir_419': [110], 'ir_417': [118], 'ir_1486': [39], 'ir_964': [92], 'ir_967': [36], 'ir_190': [1, 3, 4], 'ir_353': [63], 'ir_303': [3], 'ir_526': [48], 'ir_571': [-2], 'ir_1333': [0, 39], 'ir_265': [268500522], 'ir_753': [1, 2, 3], 'ir_587': [41988133], 'ir_373': [34]}
sub_40474c:
{'constant': []}
sub_404b10:
{'constant': [], 'ir_0': [0]}
sub_404b20:
{'constant': [], 'ir_0': [-1], 'ir_1': [0]}
sub_404b48:
{'constant': [], 'ir_0': [2], 'ir_2': [0]}
sub_404b84:
{'constant': [], 'ir_0': [2], 'ir_1': [0]}
sub_404ba4:
{'constant': [], 'ir_0': [2], 'ir_1': [0]}
sub_404c14:
{'constant': [], 'ir_0': [1], 'ir_1': [0]}
sub_404c28:
{'constant': [], 'ir_0': [0]}
sub_404c38:
{'constant': []}
sub_404c40:
{'constant': [], 'ir_0': [0]}
sub_404c4c:
{'constant': [], 'ir_0': [102]}
sub_404c58:
{'constant': [], 'ir_0': [118]}
sub_404c64:
{'constant': [], 'ir_0': [110]}
sub_404c70:
{'constant': [], 'ir_0': [116]}
sub_404c78:
{'constant': [], 'ir_0': [0]}
sub_404c80:
{'constant': [], 'ir_1': [0]}
sub_405184:
{'constant': [], 'ir_0': [1]}
sub_40518c:
{'constant': [], 'ir_1': [1]}
sub_405198:
{'constant': [], 'ir_0': [1]}
sub_4051a0:
{'constant': [], 'ir_0': [1]}
quotearg_n_options:
{'constant': [-2147483648, 0, 1, 3, 20288, 20304, 65535, 268369920], 'ir_0': [], 'ir_42': [0], 'ir_49': [256]}
clone_quoting_options:
{'constant': [0], 'ir_0': [], 'ir_20': [48]}
get_quoting_style:
{'constant': [0]}
set_quoting_style:
{'constant': [0]}
set_char_quoting:
{'constant': [0, 1, 2, 5, 8, 31, 255]}
set_quoting_flags:
{'constant': [0]}
set_custom_quoting:
{'constant': [0, 10, 40, 44], 'ir_0': [], 'ir_7': [10]}
quotearg_buffer:
{'constant': [0], 'ir_0': []}
quotearg_alloc_mem:
{'constant': [0], 'ir_0': []}
quotearg_alloc:
{'constant': [], 'ir_2': [0]}
quotearg_free:
{'constant': [1, 2, 8, 12, 256, 20288, 20304], 'ir_2': [], 'ir_11': [1], 'ir_15': [2, 3, 4], 'ir_18': [0, 1, 63], 'ir_36': [256]}
quotearg_n:
{'constant': [], 'ir_1': [-1]}
quotearg_n_mem:
{'constant': []}
quotearg:
{'constant': [], 'ir_2': [0]}
quotearg_mem:
{'constant': [], 'ir_4': [0]}
quotearg_n_style:
{'constant': [], 'ir_14': [0], 'ir_16': [-1]}
quotearg_n_style_mem:
{'constant': [], 'ir_17': [0], 'ir_11': [-1]}
quotearg_style:
{'constant': [], 'ir_4': [0], 'ir_1': [-1]}
quotearg_style_mem:
{'constant': [], 'ir_6': [0]}
quotearg_char_mem:
{'constant': [16], 'ir_0': [], 'ir_17': [0], 'ir_27': [1], 'ir_12': [-1]}
quotearg_char:
{'constant': [], 'ir_2': [-1]}
quotearg_colon:
{'constant': [], 'ir_0': [58]}
quotearg_colon_mem:
{'constant': [], 'ir_0': [58]}
quotearg_n_style_colon:
{'constant': [16], 'ir_0': [], 'ir_16': [0], 'ir_30': [1], 'ir_31': [58], 'ir_34': [-1]}
quotearg_n_custom_mem:
{'constant': [16], 'ir_0': [], 'ir_18': [0]}
quotearg_n_custom:
{'constant': [], 'ir_0': [-1]}
quotearg_custom:
{'constant': [], 'ir_6': [0]}
quotearg_custom_mem:
{'constant': [], 'ir_9': [0]}
quote_n_mem:
{'constant': []}
quote_mem:
{'constant': [], 'ir_4': [0]}
quote_n:
{'constant': [], 'ir_0': [-1]}
quote:
{'constant': [], 'ir_2': [0]}
version_etc_arn:
{'string': ['(C)', 'License GPLv3+: GNU GPL version 3 or later <%s>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n', 'Written by %s, %s, %s,\n%s, and %s.\n', 'Written by %s, %s, %s,\n%s, %s, and %s.\n', 'Written by %s, %s, %s,\n%s, %s, %s, and %s.\n', 'Written by %s, %s, %s,\nand %s.\n', 'Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n', 'Written by %s and %s.\n', 'Written by %s.\n', 'Written by %s, %s, and %s.\n'], 'constant': [0, 2, 5, 10], 'ir_0': [], 'ir_24': [1], 'ir_38': [5], 'ir_41': [0], 'ir_42': [2020], 'ir_50': [10]}
version_etc_ar:
{'constant': [0, 1, 4], 'ir_4': [1, 2, 3]}
version_etc_va:
{'constant': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 'ir_0': [], 'ir_7': [0], 'ir_30': [1], 'ir_29': [2], 'ir_28': [3], 'ir_27': [4], 'ir_26': [5], 'ir_25': [6], 'ir_24': [7], 'ir_20': [8], 'ir_17': [9]}
version_etc:
{'constant': [], 'ir_6': [0]}
emit_bug_reporting_address:
{'string': ['Report bugs to: %s\n', '%s home page: <%s>\n', 'General help using GNU software: <%s>\n'], 'constant': [], 'ir_2': [10], 'ir_10': [5], 'ir_14': [0], 'ir_17': [1]}
xmalloc:
{'constant': [0], 'ir_0': []}
xnmalloc:
{'constant': [-2147483648, 0], 'ir_6': []}
xcharalloc:
{'constant': []}
xrealloc:
{'constant': [0], 'ir_0': []}
xnrealloc:
{'constant': [-2147483648, 0], 'ir_6': []}
x2nrealloc:
{'constant': [-2147483648, 0, 1, 64], 'ir_0': [], 'ir_25': [64], 'ir_10': [0]}
x2realloc:
{'constant': [], 'ir_0': [1]}
xcalloc:
{'constant': [-2147483648, 0], 'ir_6': []}
xzalloc:
{'constant': [], 'ir_0': [1]}
xmemdup:
{'constant': []}
xstrdup:
{'constant': []}
xalloc_die:
{'string': ['memory exhausted', '%s'], 'constant': [], 'ir_3': [5], 'ir_7': [0], 'ir_10': [1]}
xstrndup:
{'constant': [0], 'ir_0': []}
rpl_fclose:
{'constant': [-2147483648, -1, 0], 'ir_0': [], 'ir_18': [0], 'ir_21': [1], 'ir_25': [-1]}
rpl_fflush:
{'constant': [0], 'ir_0': []}
rpl_fseeko:
{'constant': [-17, -1, 0], 'ir_0': [], 'ir_33': [-1], 'ir_36': [0]}
exchange:
{'constant': [0, 1, 2, 4]}
process_long_option:
{'string': ["%s: option '%s%s' is ambiguous\n", "%s: option '%s%s' requires an argument\n", "%s: option '%s%s' doesn't allow an argument\n", "%s: option '%s%s' is ambiguous; possibilities:", "%s: unrecognized option '%s%s'\n"], 'constant': [-1, 0, 1, 2, 16, 58, 61, 63], 'ir_0': [], 'ir_33': [0], 'ir_20': [61], 'ir_35': [0, 1], 'ir_445': [45], 'ir_491': [63], 'ir_473': [5], 'ir_50': [1], 'ir_457': [-1], 'ir_460': [-1, 0], 'ir_222': [10]}
_getopt_initialize.isra.0:
{'constant': [0, 1, 2, 43, 45, 22828], 'ir_0': [], 'ir_13': [43], 'ir_36': [1]}
_getopt_internal_r:
{'string': ['--', "%s: invalid option -- '%c'\n", "%s: option requires an argument -- '%c'\n", "%s: option requires an argument -- '%c'\n"], 'constant': [-1, 0, 1, 2, 4, 43, 45, 58, 59, 63, 87, 255, 22812], 'ir_0': [], 'ir_368': [-1], 'ir_23': [45], 'ir_33': [43], 'ir_57': [1], 'ir_180': [87], 'ir_310': [5], 'ir_312': [0], 'ir_352': [63], 'ir_183': [59], 'ir_248': [58]}
rpl_getopt_internal:
{'constant': [20264], 'ir_2': [], 'ir_0': [1], 'ir_18': [0]}
rpl_getopt:
{'constant': [], 'ir_0': [1], 'ir_3': [0]}
rpl_getopt_long:
{'constant': []}
_getopt_long_r:
{'constant': []}
rpl_getopt_long_only:
{'constant': []}
_getopt_long_only_r:
{'constant': []}
rpl_mbrtowc:
{'constant': [-2, 0, 1], 'ir_0': [], 'ir_8': [0], 'ir_18': [1], 'ir_11': [-2], 'ir_27': [-1107304409]}
c_isalnum:
{'constant': [0, 1, 10, 26, 48, 65, 91, 97], 'ir_12': [0], 'ir_10': [1]}
c_isalpha:
{'constant': [0, 1, 26, 65, 91, 97], 'ir_9': [0], 'ir_11': [1]}
c_isascii:
{'constant': [128]}
c_isblank:
{'constant': [1, 9, 32], 'ir_0': [32], 'ir_6': [1]}
c_iscntrl:
{'constant': [-2147483648, 0, 1, 32], 'ir_5': [0], 'ir_7': [1], 'ir_2': [127]}
c_isdigit:
{'constant': [10, 48]}
c_isgraph:
{'constant': [33, 94]}
c_islower:
{'constant': [26, 97]}
c_isprint:
{'constant': [32, 95]}
c_ispunct:
{'constant': [0, 1, 4, 15, 33, 58, 65, 91, 97, 123], 'ir_16': [0], 'ir_14': [1]}
c_isspace:
{'constant': [0, 1, 9, 24, 31], 'ir_11': [0]}
c_isupper:
{'constant': [26, 65]}
c_isxdigit:
{'constant': [0, 1, 2, 48, 55], 'ir_13': [0]}
c_tolower:
{'constant': [0, 26, 32, 65]}
c_toupper:
{'constant': [0, 26, 32, 97]}
c_strcasecmp:
{'constant': [0, 1, 255, 12512], 'ir_2': [], 'ir_43': [0]}
close_stream:
{'constant': [-1, 0, 9], 'ir_0': [], 'ir_36': [-1]}
hard_locale:
{'string': ['POSIX'], 'constant': [0], 'ir_0': [], 'ir_3': [257]}
locale_charset:
{'constant': [0], 'ir_0': [], 'ir_5': [14]}
setlocale_null_androidfix:
{'constant': [], 'ir_3': [0]}
setlocale_null_unlocked:
{'constant': [0, 1, 22, 34], 'ir_0': [], 'ir_47': [22], 'ir_19': [34], 'ir_37': [0]}
setlocale_null_r:
{'constant': []}
setlocale_null:
{'constant': []}
__libc_csu_init:
{'constant': [0, 1, 4, 107248], 'ir_24': [0, 1], 'ir_26': [1]}
__libc_csu_fini:
{'constant': []}
atexit:
{'constant': [], 'ir_5': [0]}
__do_global_ctors_aux:
{'constant': [-1, 4], 'ir_0': [], 'ir_1': [-1], 'ir_10': [0]}
_MIPS_STUBS_:
{'constant': [], 'ir_5': [122]}
sub_408f30:
{'constant': [], 'ir_5': [121]}
sub_408f40:
{'constant': [], 'ir_5': [119]}
sub_408f50:
{'constant': [], 'ir_5': [117]}
sub_408f60:
{'constant': [], 'ir_5': [116]}
sub_408f70:
{'constant': [], 'ir_5': [115]}
sub_408f80:
{'constant': [], 'ir_5': [113]}
sub_408f90:
{'constant': [], 'ir_5': [112]}
sub_408fa0:
{'constant': [], 'ir_5': [111]}
sub_408fb0:
{'constant': [], 'ir_5': [110]}
sub_408fc0:
{'constant': [], 'ir_5': [109]}
sub_408fd0:
{'constant': [], 'ir_5': [108]}
sub_408fe0:
{'constant': [], 'ir_5': [107]}
sub_408ff0:
{'constant': [], 'ir_5': [106]}
sub_409000:
{'constant': [], 'ir_5': [105]}
sub_409010:
{'constant': [], 'ir_5': [104]}
sub_409020:
{'constant': [], 'ir_5': [103]}
sub_409030:
{'constant': [], 'ir_5': [102]}
sub_409040:
{'constant': [], 'ir_5': [101]}
sub_409050:
{'constant': [], 'ir_5': [100]}
sub_409060:
{'constant': [], 'ir_5': [99]}
sub_409070:
{'constant': [], 'ir_5': [98]}
sub_409080:
{'constant': [], 'ir_5': [97]}
sub_409090:
{'constant': [], 'ir_5': [96]}
sub_4090a0:
{'constant': [], 'ir_5': [95]}
sub_4090b0:
{'constant': [], 'ir_5': [94]}
sub_4090c0:
{'constant': [], 'ir_5': [92]}
sub_4090d0:
{'constant': [], 'ir_5': [91]}
sub_4090e0:
{'constant': [], 'ir_5': [90]}
sub_4090f0:
{'constant': [], 'ir_5': [89]}
sub_409100:
{'constant': [], 'ir_5': [87]}
sub_409110:
{'constant': [], 'ir_5': [86]}
sub_409120:
{'constant': [], 'ir_5': [85]}
sub_409130:
{'constant': [], 'ir_5': [84]}
sub_409140:
{'constant': [], 'ir_5': [83]}
sub_409150:
{'constant': [], 'ir_5': [81]}
sub_409160:
{'constant': [], 'ir_5': [80]}
sub_409170:
{'constant': [], 'ir_5': [79]}
sub_409180:
{'constant': [], 'ir_5': [77]}
sub_409190:
{'constant': [], 'ir_5': [76]}
sub_4091a0:
{'constant': [], 'ir_5': [75]}
sub_4091b0:
{'constant': [], 'ir_5': [74]}
sub_4091c0:
{'constant': [], 'ir_5': [73]}
sub_4091d0:
{'constant': [], 'ir_5': [71]}
sub_4091e0:
{'constant': [], 'ir_5': [70]}
sub_4091f0:
{'constant': [], 'ir_5': [69]}
sub_409200:
{'constant': [], 'ir_5': [67]}
sub_409210:
{'constant': [], 'ir_5': [66]}
sub_409220:
{'constant': [], 'ir_5': [64]}
sub_409230:
{'constant': [], 'ir_5': [63]}
sub_409240:
{'constant': [], 'ir_5': [62]}
sub_409250:
{'constant': [], 'ir_5': [61]}
sub_409260:
{'constant': [], 'ir_5': [60]}
sub_409270:
{'constant': [], 'ir_5': [59]}
sub_409280:
{'constant': [], 'ir_5': [58]}
sub_409290:
{'constant': [], 'ir_5': [57]}
_fini:
{'constant': []}
sub_4092d0:
{'constant': []}
