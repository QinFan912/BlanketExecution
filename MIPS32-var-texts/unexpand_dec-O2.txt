_init:
{'constant': [0, 138044]}
sub_4015dc:
{'constant': []}
sub_401600:
{'constant': []}
_ftext:
{'string': ['coreutils', '/usr/local/share/locale', 'coreutils'], 'constant': [-1717986918, -131, -130, -1, 0, 1, 10, 31, 44, 48, 63, 64, 97, 116, 128, 27424, 28232], 'ir_25': [6], 'ir_49': ['tabs'], 'ir_168': [1], 'ir_156': [0], 'ir_85': [], 'ir_196': [5]}
__start:
{'constant': []}
sub_4019bc:
{'constant': [-8, 16, 20, 24, 32], 'ir_5': []}
hlt:
{'constant': []}
deregister_tm_clones:
{'constant': [0, 1, 12512]}
register_tm_clones:
{'constant': [0, 12512], 'ir_7': [0]}
__do_global_dtors_aux:
{'constant': [0, 1, 2, 4, 19724, 19728, 20632]}
frame_dummy:
{'constant': [0, 12512]}
emit_stdin_note:
{'string': ['\nWith no FILE, or when FILE is -, read standard input.\n'], 'constant': [], 'ir_3': [0], 'ir_8': [5]}
emit_mandatory_arg_note:
{'string': ['\nMandatory arguments to long options are mandatory for short options too.\n'], 'constant': [], 'ir_3': [0], 'ir_8': [5]}
unexpand:
{'string': ['write error'], 'constant': [-2147483648, 0, 1, 8, 9, 256, 28344], 'ir_2': [0], 'ir_86': [], 'ir_178': [5], 'ir_184': [1], 'ir_197': [9]}
emit_ancillary_info.constprop.0:
{'string': ['unexpand', '\n%s online help: <%s>\n', 'en_', '\n%s online help: <%s>\n', 'en_', 'Full documentation <%s%s>\n', "or available locally via: info '(coreutils) %s%s'\n", 'Report any translation bugs to <https://translationproject.org/team/>\n', 'Full documentation <%s%s>\n', "or available locally via: info '(coreutils) %s%s'\n"], 'constant': [0, 8, 16, 28308], 'ir_24': [0], 'ir_50': [5], 'ir_59': [1], 'ir_71': [3], 'ir_138': []}
usage:
{'string': ['Usage: %s [OPTION]... [FILE]...\n', 'Convert blanks in each FILE to tabs, writing to standard output.\n', '  -a, --all        convert all blanks, instead of just initial blanks\n      --first-only  convert only leading sequences of blanks (overrides -a)\n  -t, --tabs=N     have tabs N characters apart instead of 8 (enables -a)\n', '      --help     display this help and exit\n', '      --version  output version information and exit\n', "Try '%s --help' for more information.\n"], 'constant': [0], 'ir_3': [5], 'ir_28': [1], 'ir_18': []}
to_uchar:
{'constant': [255]}
set_extend_size:
{'string': ["'/' specifier only allowed with the last value"], 'constant': [0, 1, 19668, 19672], 'ir_21': [5], 'ir_24': [0]}
set_increment_size:
{'string': ["'+' specifier only allowed with the last value"], 'constant': [0, 1, 19676, 19680], 'ir_21': [5], 'ir_24': [0]}
validate_tab_stops:
{'constant': [0, 1, 5, 8], 'ir_77': [5], 'ir_8': [1], 'ir_9': [1, 2, 3], 'ir_62': [0], 'ir_18': [2, 3]}
add_tab_stop:
{'string': ['tabs are too far apart'], 'constant': [0, 1, 3, 4, 8, 19684, 19688, 19692], 'ir_63': [], 'ir_70': [0], 'ir_83': [8], 'ir_38': [5], 'ir_44': [1]}
parse_tab_stops:
{'string': ['tab size contains invalid character(s): %s'], 'constant': [-1718026240, 0, 1, 2, 3, 10, 30, 31, 43, 44, 47, 48, 256, 39322, 429457408], 'ir_186': [0], 'ir_259': [1], 'ir_163': [5], 's_38': [0, 1]}
finalize_tab_stops:
{'constant': [0, 1, 8], 'ir_7': [0], 'ir_20': [8]}
get_next_tab_column:
{'constant': [0, 1, 3, 8], 'ir_116': [0], 'ir_59': [], 'ir_60': [1]}
set_file_list:
{'constant': [0]}
next_file:
{'string': ['%s', '%s', '%s'], 'constant': [0, 1, 4, 19696, 19700, 19712, 26932], 'ir_192': [341], 'ir_50': [0], 'ir_174': [2], 'ir_175': [], 'ir_23': [3]}
cleanup_file_list_stdin:
{'constant': [0], 'ir_9': [], 'ir_16': [1]}
emit_tab_list_info:
{'string': ['  -t, --tabs=LIST  use comma separated list of tab positions\n', "                     The last specified position can be prefixed with '/'\n                     to specify a tab size to use after the last\n                     explicitly specified tab stop.  Also a prefix of '+'\n                     can be used to align remaining tab stops relative to\n                     the last specified tab stop instead of the first column\n"], 'constant': [], 'ir_3': [5], 'ir_10': [0]}
close_stdout_set_file_name:
{'constant': []}
close_stdout_set_ignore_EPIPE:
{'constant': []}
close_stdout:
{'string': ['%s: %s', '%s'], 'constant': [0, 32, 28320], 'ir_8': [], 'ir_29': [5], 'ir_32': [0], 'ir_71': [1]}
fdadvise:
{'constant': []}
fadvise:
{'constant': [0]}
set_program_name:
{'string': ['lt-'], 'constant': [0, 1, 4, 6, 7, 26392], 'ir_58': [55], 'ir_59': [1], 'ir_62': [], 'ir_8': [47], 'ir_22': [7], 'ir_33': [3]}
quoting_options_from_style:
{'constant': [0, 10]}
strcaseeq9:
{'constant': [1]}
strcaseeq8:
{'constant': [0, 1, 223]}
strcaseeq7:
{'constant': [0, 1, 223], 's_20': []}
strcaseeq6:
{'constant': [0, 1, 223], 's_20': []}
strcaseeq5:
{'constant': [0, 1, 223], 's_28': []}
strcaseeq4:
{'constant': [0, 1, 223], 's_28': []}
strcaseeq3:
{'constant': [0, 1, 223], 's_28': []}
strcaseeq2:
{'constant': [0, 1, 223], 's_28': []}
strcaseeq1:
{'constant': [0, 1, 223], 's_28': []}
strcaseeq0.constprop.0:
{'constant': [0, 1, 223]}
gettext_quote:
{'constant': [0, 9, 96], 'ir_3': [5], 'ir_8': [0], 'ir_25': [84], 'ir_26': [85], 'ir_49': [66], 'ir_51': [71]}
quotearg_buffer_restyled:
{'constant': [0, 1, 30, 31, 102, 110, 116, 118], 'ir_81': [61477], 'ir_125': [], 'ir_529': [-1885208452], 'ir_260': [341836454], 'ir_213': [0, 1], 'ir_718': [0], 'ir_359': [2], 'ir_345': [-1], 'ir_360': [1], 'ir_273': [5], 'ir_964': [92], 'ir_972': [39], 'ir_280': [63], 'ir_927': [36], 'ir_256': [268500519], 'ir_424': [48], 'ir_589': [-1884094388], 'ir_301': [34]}
sub_40471c:
{'constant': []}
sub_404ae8:
{'constant': []}
sub_404af8:
{'constant': [], 'ir_0': [-1]}
sub_404b20:
{'constant': []}
sub_404b5c:
{'constant': [], 'ir_0': [2]}
sub_404b7c:
{'constant': [], 'ir_0': [2]}
sub_404bec:
{'constant': [], 'ir_1': [0]}
sub_404c00:
{'constant': []}
sub_404c10:
{'constant': []}
sub_404c18:
{'constant': []}
sub_404c24:
{'constant': []}
sub_404c30:
{'constant': []}
sub_404c3c:
{'constant': []}
sub_404c48:
{'constant': []}
sub_404c50:
{'constant': []}
sub_404c58:
{'constant': []}
sub_405168:
{'constant': []}
sub_405170:
{'constant': []}
sub_40517c:
{'constant': []}
sub_405184:
{'constant': []}
quotearg_n_options:
{'constant': [-2147483648, 0, 1, 3, 20288, 20304, 65535, 268369920], 'ir_32': [], 'ir_42': [0], 'ir_49': [256]}
clone_quoting_options:
{'constant': [0], 'ir_20': [48]}
get_quoting_style:
{'constant': [0]}
set_quoting_style:
{'constant': [0]}
set_char_quoting:
{'constant': [0, 1, 2, 5, 8, 31, 255]}
set_quoting_flags:
{'constant': [0]}
set_custom_quoting:
{'constant': [0, 10, 40, 44]}
quotearg_buffer:
{'constant': [0]}
quotearg_alloc_mem:
{'constant': [0]}
quotearg_alloc:
{'constant': [], 'ir_2': [0]}
quotearg_free:
{'constant': [1, 2, 8, 12, 256, 20288, 20304], 'ir_18': [0, 1, 63]}
quotearg_n:
{'constant': [], 'ir_1': [-1]}
quotearg_n_mem:
{'constant': []}
quotearg:
{'constant': [], 'ir_2': [0]}
quotearg_mem:
{'constant': [], 'ir_4': [0]}
quotearg_n_style:
{'constant': [], 'ir_16': [-1], 'ir_21': [0]}
quotearg_n_style_mem:
{'constant': [], 'ir_24': [0], 'ir_23': [-1]}
quotearg_style:
{'constant': [], 'ir_4': [0], 'ir_1': [-1]}
quotearg_style_mem:
{'constant': [], 'ir_6': [0]}
quotearg_char_mem:
{'constant': [16], 'ir_9': [], 'ir_21': [0], 'ir_27': [1]}
quotearg_char:
{'constant': [], 'ir_2': [-1]}
quotearg_colon:
{'constant': [], 'ir_0': [58]}
quotearg_colon_mem:
{'constant': [], 'ir_0': [58]}
quotearg_n_style_colon:
{'constant': [16], 'ir_10': [], 'ir_30': [1], 'ir_31': [58], 'ir_34': [-1], 'ir_39': [0]}
quotearg_n_custom_mem:
{'constant': [16], 'ir_23': [0], 'ir_28': []}
quotearg_n_custom:
{'constant': []}
quotearg_custom:
{'constant': [], 'ir_6': [0]}
quotearg_custom_mem:
{'constant': [], 'ir_9': [0]}
quote_n_mem:
{'constant': []}
quote_mem:
{'constant': [], 'ir_4': [0]}
quote_n:
{'constant': [], 'ir_0': [-1]}
quote:
{'constant': [], 'ir_2': [0]}
version_etc_arn:
{'string': ['(C)', 'License GPLv3+: GNU GPL version 3 or later <%s>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n', 'Written by %s, %s, %s,\nand %s.\n', 'Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n', 'Written by %s, %s, %s,\n%s, %s, %s, and %s.\n', 'Written by %s, %s, %s,\n%s, and %s.\n', 'Written by %s, %s, %s,\n%s, %s, and %s.\n', 'Written by %s, %s, and %s.\n', 'Written by %s and %s.\n', 'Written by %s.\n'], 'constant': [0, 2, 5, 10], 'ir_24': [1], 'ir_38': [5], 'ir_41': [0], 'ir_50': [10]}
version_etc_ar:
{'constant': [0, 1, 4]}
version_etc_va:
{'constant': [0, 1, 4]}
version_etc:
{'constant': []}
emit_bug_reporting_address:
{'string': ['Report bugs to: %s\n', '%s home page: <%s>\n', 'General help using GNU software: <%s>\n'], 'constant': [], 'ir_2': [10], 'ir_10': [5], 'ir_14': [0], 'ir_17': [1]}
xmalloc:
{'constant': [0]}
xnmalloc:
{'constant': [-2147483648, 0]}
xcharalloc:
{'constant': []}
xrealloc:
{'constant': [0]}
xnrealloc:
{'constant': [-2147483648, 0]}
x2nrealloc:
{'constant': [-2147483648, 0, 1, 64]}
x2realloc:
{'constant': [], 'ir_0': [1]}
xcalloc:
{'constant': [-2147483648, 0]}
xzalloc:
{'constant': [], 'ir_0': [1]}
xmemdup:
{'constant': []}
xstrdup:
{'constant': []}
xalloc_die:
{'string': ['memory exhausted', '%s'], 'constant': [], 'ir_3': [5], 'ir_7': [0], 'ir_19': [1]}
xstrndup:
{'constant': [0]}
rpl_fclose:
{'constant': [-2147483648, -1, 0], 'ir_18': [0], 'ir_25': [-1]}
clear_ungetc_buffer_preserving_position:
{'constant': [0, 256], 'ir_3': [0]}
rpl_fflush:
{'constant': [0]}
rpl_fseeko:
{'constant': [-17, -1, 0], 'ir_33': [-1]}
exchange:
{'constant': [0, 1, 2, 4]}
process_long_option:
{'string': ["%s: option '%s%s' is ambiguous; possibilities:", "%s: option '%s%s' is ambiguous\n", "%s: option '%s%s' requires an argument\n", "%s: option '%s%s' doesn't allow an argument\n", "%s: unrecognized option '%s%s'\n"], 'constant': [-1, 0, 1, 2, 16, 58, 61, 63], 'ir_39': [0], 'ir_419': [5], 'ir_424': [1], 'ir_428': [], 'ir_65': [0, 1], 'ir_332': [63], 'ir_212': [10]}
_getopt_initialize.isra.0:
{'constant': [0, 1, 2, 43, 45, 23404], 'ir_16': []}
_getopt_internal_r:
{'string': ['--', "%s: invalid option -- '%c'\n", "%s: option requires an argument -- '%c'\n", "%s: option requires an argument -- '%c'\n"], 'constant': [-1, 0, 1, 2, 4, 43, 45, 58, 59, 63, 87, 255, 23388], 'ir_307': [5], 'ir_309': [0], 'ir_188': [59], 'ir_72': [45], 'ir_312': [1], 'ir_316': [], 'ir_250': [58]}
rpl_getopt_internal:
{'constant': [20264], 'ir_18': [0]}
rpl_getopt:
{'constant': [], 'ir_3': [0]}
rpl_getopt_long:
{'constant': []}
_getopt_long_r:
{'constant': []}
rpl_getopt_long_only:
{'constant': []}
_getopt_long_only_r:
{'constant': []}
rpl_mbrtowc:
{'constant': [-2, 0, 1], 'ir_18': [1], 'ir_28': [], 'ir_50': [0]}
c_isalnum:
{'constant': [0, 1, 10, 26, 48, 65, 91, 97]}
c_isalpha:
{'constant': [0, 1, 26, 65, 91, 97]}
c_isascii:
{'constant': [128]}
c_isblank:
{'constant': [1, 9, 32]}
c_iscntrl:
{'constant': [-2147483648, 0, 1, 32]}
c_isdigit:
{'constant': [10, 48]}
c_isgraph:
{'constant': [33, 94]}
c_islower:
{'constant': [26, 97]}
c_isprint:
{'constant': [32, 95]}
c_ispunct:
{'constant': [0, 1, 4, 15, 33, 58, 65, 91, 97, 123]}
c_isspace:
{'constant': [0, 1, 9, 24, 31]}
c_isupper:
{'constant': [26, 65]}
c_isxdigit:
{'constant': [0, 1, 2, 48, 55]}
c_tolower:
{'constant': [0, 26, 32, 65]}
c_toupper:
{'constant': [0, 26, 32, 97]}
c_strcasecmp:
{'constant': [0, 1, 255, 12512]}
close_stream:
{'constant': [-1, 0, 9]}
hard_locale:
{'string': ['POSIX'], 'constant': [0], 'ir_3': [257], 'ir_8': []}
locale_charset:
{'constant': [0], 'ir_5': [14]}
setlocale_null_androidfix:
{'constant': [], 'ir_3': [0]}
setlocale_null_unlocked:
{'constant': [0, 1, 22, 34]}
setlocale_null_r:
{'constant': []}
setlocale_null:
{'constant': []}
__libc_csu_fini:
{'constant': []}
atexit:
{'constant': [], 'ir_5': [0]}
__do_global_ctors_aux:
{'constant': [-1, 4]}
_MIPS_STUBS_:
{'constant': []}
sub_408cf0:
{'constant': []}
sub_408d00:
{'constant': []}
sub_408d10:
{'constant': []}
sub_408d20:
{'constant': []}
sub_408d30:
{'constant': []}
sub_408d40:
{'constant': []}
sub_408d50:
{'constant': []}
sub_408d60:
{'constant': []}
sub_408d70:
{'constant': []}
sub_408d80:
{'constant': []}
sub_408d90:
{'constant': []}
sub_408da0:
{'constant': []}
sub_408db0:
{'constant': []}
sub_408dc0:
{'constant': []}
sub_408dd0:
{'constant': []}
sub_408de0:
{'constant': []}
sub_408df0:
{'constant': []}
sub_408e00:
{'constant': []}
sub_408e10:
{'constant': []}
sub_408e20:
{'constant': []}
sub_408e30:
{'constant': []}
sub_408e40:
{'constant': []}
sub_408e50:
{'constant': []}
sub_408e60:
{'constant': []}
sub_408e70:
{'constant': []}
sub_408e80:
{'constant': []}
sub_408e90:
{'constant': []}
sub_408ea0:
{'constant': []}
sub_408eb0:
{'constant': []}
sub_408ec0:
{'constant': []}
sub_408ed0:
{'constant': []}
sub_408ee0:
{'constant': []}
sub_408ef0:
{'constant': []}
sub_408f00:
{'constant': []}
sub_408f10:
{'constant': []}
sub_408f20:
{'constant': []}
sub_408f30:
{'constant': []}
sub_408f40:
{'constant': []}
sub_408f50:
{'constant': []}
sub_408f60:
{'constant': []}
sub_408f70:
{'constant': []}
sub_408f80:
{'constant': []}
sub_408f90:
{'constant': []}
sub_408fa0:
{'constant': []}
sub_408fb0:
{'constant': []}
sub_408fc0:
{'constant': []}
sub_408fd0:
{'constant': []}
sub_408fe0:
{'constant': []}
sub_408ff0:
{'constant': []}
sub_409000:
{'constant': []}
sub_409010:
{'constant': []}
sub_409020:
{'constant': []}
sub_409030:
{'constant': []}
sub_409040:
{'constant': []}
sub_409050:
{'constant': []}
_fini:
{'constant': []}
sub_409090:
{'constant': []}
