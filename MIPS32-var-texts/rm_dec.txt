_init:
{'constant': [0, 190020]}
sub_401ad4:
{'constant': []}
sub_401af4:
{'constant': []}
_ftext:
{'constant': []}
sub_401b2c:
{'constant': [-8, 16, 20, 24, 32], 'ir_5': []}
hlt:
{'constant': []}
deregister_tm_clones:
{'constant': [0, 224]}
register_tm_clones:
{'constant': [0, 224], 'ir_7': [0]}
__do_global_dtors_aux:
{'constant': [0, 1, 2, 4, 31820, 31824, 32500]}
frame_dummy:
{'constant': []}
select_plural:
{'constant': [0, 1000000], 'ir_10': [1000000], 'ir_12': [0]}
emit_ancillary_info:
{'string': ['\n%s online help: <%s>\n', 'en_', 'Report any translation bugs to <https://translationproject.org/team/>\n', 'Full documentation <%s%s>\n', "or available locally via: info '(coreutils) %s%s'\n"], 'constant': [0, 8], 'ir_10': [56], 'ir_11': ['[\x00\x00\x00'], 'ir_12': [], 'ir_70': [0], 'ir_71': [5], 'ir_77': [3]}
diagnose_leading_hyphen:
{'string': ["Try '%s ./%s' to remove the file %s.\n"], 'constant': [0, 1, 2, 45], 'ir_28': [], 'ir_54': [3], 'ir_55': [1], 'ir_62': [4]}
usage:
{'string': ['Usage: %s [OPTION]... [FILE]...\n', 'Remove (unlink) the FILE(s).\n\n  -f, --force           ignore nonexistent files and arguments, never prompt\n  -i                    prompt before every removal\n', '  -I                    prompt once before removing more than three files, or\n                          when removing recursively; less intrusive than -i,\n                          while still giving protection against most mistakes\n      --interactive[=WHEN]  prompt according to WHEN: never, once (-I), or\n                          always (-i); without WHEN, prompt always\n', '      --one-file-system  when removing a hierarchy recursively, skip any\n                          directory that is on a file system different from\n                          that of the corresponding command line argument\n', "      --no-preserve-root  do not treat '/' specially\n      --preserve-root[=all]  do not remove '/' (default);\n                              with 'all', reject any command line argument\n                              on a separate device from its parent\n", '  -r, -R, --recursive   remove directories and their contents recursively\n  -d, --dir             remove empty directories\n  -v, --verbose         explain what is being done\n', '      --help     display this help and exit\n', '      --version  output version information and exit\n', '\nBy default, rm does not remove directories.  Use the --recursive (-r or -R)\noption to remove each listed directory, too, along with all of its contents.\n', "\nTo remove a file whose name starts with a '-', for example '-foo',\nuse one of these commands:\n  %s -- -foo\n\n  %s ./-foo\n", '\nNote that if you use rm to remove a file, it might be possible to recover\nsome of its contents, given sufficient expertise and/or time.  For greater\nassurance that the contents are truly unrecoverable, consider using shred.\n', 'rm', "Try '%s --help' for more information.\n"], 'constant': [0], 'ir_19': []}
rm_option_init:
{'constant': [0, 4], 'ir_12': [0]}
main:
{'string': ['coreutils', '/usr/local/share/locale', 'coreutils', 'dfirvIR', 'all', 'unrecognized --preserve-root argument: %s', '--no-preserve-root', 'you may not abbreviate the --no-preserve-root option', '--interactive', 'rm', 'GNU coreutils', 'failed to get attributes of %s', '%s: remove %llu argument recursively? ', '%s: remove %llu arguments recursively? ', '%s: remove %llu argument? ', '%s: remove %llu arguments? ', 'missing operand'], 'constant': [-131, -130, -1, 0, 1, 2, 3, 4, 31, 73, 74, 82, 100, 102, 105, 106, 114, 118, 128, 129, 130, 131, 132, 1073741823], 'ir_19': [6], 'ir_44': [], 'ir_52': ['forc'], 'ir_353': [0], 'ir_359': [1], 'ir_523': [371], 'ir_389': [4], 'ir_103': ['neve']}
dot_or_dotdot:
{'constant': [0, 1, 2, 46, 47, 255]}
readdir_ignoring_dot_and_dotdot:
{'constant': [0, 1, 19]}
is_empty_dir:
{'constant': [-2147483648, 0, 1], 'ir_6': [198784]}
cache_fstatat:
{'constant': [-2147483648, -2, -1, 0, 31], 'ir_12': [-1]}
cache_stat_init:
{'constant': [-1]}
write_protected_non_symlink:
{'constant': [-1, 0, 1, 13, 40960, 61440], 'ir_11': [256], 'ir_29': [512], 'ir_30': [2]}
prompt:
{'string': ['cannot remove %s', '%s: descend into write-protected directory %s? ', '%s: descend into directory %s? ', '%s: remove write-protected %s %s? ', '%s: remove %s %s? ', 'cannot remove %s'], 'constant': [-2147483648, -1, 0, 1, 2, 3, 4, 5, 10, 21, 16384, 40960, 61440], 'ir_25': [], 'ir_307': [0], 'ir_88': [256], 'ir_138': [4]}
nonexistent_file_errno:
{'constant': [0, 1, 2, 20, 21, 22, 88]}
ignorable_missing:
{'constant': [0, 1, 255]}
fts_skip_tree:
{'constant': [], 'ir_5': [4]}
mark_ancestor_dirs:
{'constant': [-2147483648, 0, 1]}
excise:
{'string': ['removed directory %s\n', 'removed %s\n', 'cannot remove %s'], 'constant': [0, 1, 2, 4, 13, 17, 20, 21, 30, 93], 'ir_20': [0, 512], 'ir_82': [], 'ir_216': [0], 'ir_53': [4]}
rm_fts:
{'string': ['cannot remove %s', 'refusing to remove %s or %s directory: skipping %s', '..', 'it is dangerous to operate recursively on %s', 'it is dangerous to operate recursively on %s (same as %s)', 'use --no-preserve-root to override this failsafe', '..', 'failed to stat %s: skipping %s', "skipping %s, since it's on a different device", 'and --preserve-root=all is in effect', "skipping %s, since it's on a different device", 'traversal failed: %s', 'WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n', 'unexpected failure: fts_info=%d: %s\nplease report to %s'], 'constant': [0, 1, 2, 4, 6, 14, 21, 93], 'ir_641': [3], 'ir_642': [0], 'ir_24': [6], 'ir_509': [1], 'ir_85': [0, 1], 'ir_152': [4], 'ir_159': [21, 93], 'ir_215': [2], 'ir_374': []}
rm:
{'string': ['fts_read failed', 'fts_close failed'], 'constant': [0, 2, 3, 4, 64, 536], 'ir_15': [0], 'ir_16': [536, 600], 'ir_62': [609]}
__argmatch_die:
{'constant': [], 'ir_3': [1]}
sub_404f30:
{'constant': []}
argmatch:
{'constant': [-2, -1, 0, 1, 2]}
argmatch_invalid:
{'string': ['invalid argument %s for %s', 'ambiguous argument %s for %s'], 'constant': [-1], 'ir_27': [8], 'ir_28': [0], 'ir_35': [1]}
argmatch_valid:
{'string': ['Valid arguments are:', ', %s', '\n  - %s'], 'constant': [0, 1, 2], 'ir_16': [], 'ir_108': [10], 'ir_35': [0]}
__xargmatch_internal:
{'constant': [-2147483648, -1]}
argmatch_to_argument:
{'constant': [0, 1, 2]}
close_stdin_set_file_name:
{'constant': []}
close_stdin:
{'string': ['error closing file', '%s: %s', '%s'], 'constant': [0, 1], 'ir_6': [], 'ir_14': [0], 'ir_106': [1]}
close_stdout_set_file_name:
{'constant': []}
close_stdout_set_ignore_EPIPE:
{'constant': []}
close_stdout:
{'string': ['write error', '%s: %s', '%s'], 'constant': [0, 1, 32], 'ir_6': [], 'ir_101': [1], 'ir_69': [0]}
last_component:
{'constant': [0, 1, 47]}
base_len:
{'constant': [1, 2, 47]}
file_type:
{'string': ['socket', 'weird file', 'fifo', 'character special file', 'block special file', 'symbolic link', 'directory', 'regular empty file', 'regular file'], 'constant': [0, 4096, 8192, 16384, 24576, 32768, 40960, 49152, 61440]}
file_name_concat:
{'constant': [0]}
mfile_name_concat:
{'constant': [0, 1, 46, 47]}
priv_set_remove_linkdir:
{'constant': [-1]}
priv_set_restore_linkdir:
{'constant': [-1]}
set_program_name:
{'string': ['/.libs/', 'lt-'], 'constant': [0, 1, 3, 7], 'ir_19': [47], 'ir_7': [], 'ir_8': [55], 'ir_9': [1], 'ir_36': [7], 'ir_52': [3]}
clone_quoting_options:
{'constant': [0], 'ir_14': [48]}
get_quoting_style:
{'constant': [0]}
set_quoting_style:
{'constant': [0]}
set_char_quoting:
{'constant': [0, 1, 2, 5, 8, 31, 255]}
set_quoting_flags:
{'constant': [0]}
set_custom_quoting:
{'constant': [0, 10]}
quoting_options_from_style:
{'constant': [10], 'ir_17': [48], 'ir_18': [], 'ir_25': [0]}
gettext_quote:
{'string': ['UTF-8', 'GB18030'], 'constant': [0, 9, 96]}
quotearg_buffer_restyled:
{'constant': [-2, -1, 0, 1, 2, 3, 5, 6, 7, 10, 11, 33, 34, 36, 39, 48, 63, 64, 91, 92, 97, 98, 102, 110, 114, 116, 118, 127, 255], 'ir_233': [8], 'ir_234': [0], 'ir_235': []}
quotearg_buffer:
{'constant': [0]}
quotearg_alloc:
{'constant': [], 'ir_5': [0]}
quotearg_alloc_mem:
{'constant': [0, 1], 'ir_34': [0]}
quotearg_free:
{'constant': [1, 3, 256], 'ir_15': [0, 1]}
quotearg_n_options:
{'constant': [-2147483648, 0, 1, 3, 4, 268435454], 'ir_46': [0]}
quotearg_n:
{'constant': [], 'ir_5': [-1]}
quotearg_n_mem:
{'constant': []}
quotearg:
{'constant': [], 'ir_3': [0]}
quotearg_mem:
{'constant': [], 'ir_5': [0]}
quotearg_n_style:
{'constant': [], 'ir_15': [-1], 'ir_21': [0]}
quotearg_n_style_mem:
{'constant': [], 'ir_22': [0]}
quotearg_style:
{'constant': [], 'ir_5': [0]}
quotearg_style_mem:
{'constant': [], 'ir_7': [0]}
quotearg_char_mem:
{'constant': [], 'ir_13': [48], 'ir_22': [1], 'ir_31': [0]}
quotearg_char:
{'constant': [], 'ir_6': [-1]}
quotearg_colon:
{'constant': [], 'ir_2': [58]}
quotearg_colon_mem:
{'constant': [], 'ir_3': [58]}
quotearg_n_style_colon:
{'constant': [], 'ir_16': [48], 'ir_24': [1], 'ir_25': [58], 'ir_31': [-1], 'ir_37': [0]}
quotearg_n_custom:
{'constant': []}
quotearg_n_custom_mem:
{'constant': [], 'ir_13': [48], 'ir_34': [0]}
quotearg_custom:
{'constant': [], 'ir_7': [0]}
quotearg_custom_mem:
{'constant': [], 'ir_9': [0]}
quote_n_mem:
{'constant': []}
quote_mem:
{'constant': [], 'ir_5': [0]}
quote_n:
{'constant': [], 'ir_3': [-1]}
quote:
{'constant': [], 'ir_3': [0]}
get_root_dev_ino:
{'constant': [0], 'ir_9': []}
statat:
{'constant': [], 'ir_6': [0]}
lstatat:
{'constant': [], 'ir_6': [256]}
version_etc_arn:
{'string': ['%s (%s) %s\n', '%s %s\n', '(C)', 'License GPLv3+: GNU GPL version 3 or later <%s>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n', 'Written by %s, %s, %s,\n%s, %s, %s, and %s.\n', 'Written by %s.\n', 'Written by %s, %s, %s,\n%s, and %s.\n', 'Written by %s, %s, %s,\nand %s.\n', 'Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n', 'Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n', 'Written by %s, %s, and %s.\n', 'Written by %s and %s.\n', 'Written by %s, %s, %s,\n%s, %s, and %s.\n', 'Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n'], 'constant': [0, 2, 10], 'ir_41': [2020], 'ir_50': [10]}
version_etc_ar:
{'constant': [0, 1, 2]}
version_etc_va:
{'constant': [0, 1, 2, 4, 10, 44], 'ir_17': []}
version_etc:
{'constant': []}
emit_bug_reporting_address:
{'string': ['Report bugs to: %s\n', '%s home page: <%s>\n', 'General help using GNU software: <%s>\n'], 'constant': [], 'ir_6': [10]}
can_write_any_file:
{'constant': [0, 1]}
xnmalloc:
{'constant': [-2147483648, 0, 1], 'ir_5': [0], 'ir_16': [1]}
xnrealloc:
{'constant': [-2147483648, 0, 1], 'ir_6': [0], 'ir_17': [1]}
x2nrealloc:
{'constant': [-2147483648, 0, 1, 64], 'ir_25': [0], 'ir_35': [1]}
xcharalloc:
{'constant': []}
xmalloc:
{'constant': [0]}
xrealloc:
{'constant': [0]}
x2realloc:
{'constant': [], 'ir_3': [1]}
xzalloc:
{'constant': [], 'ir_2': [1]}
xcalloc:
{'constant': [-2147483648, 0, 1], 'ir_5': [0], 'ir_16': [1]}
xmemdup:
{'constant': []}
xstrdup:
{'constant': [1]}
xalloc_die:
{'string': ['memory exhausted', '%s'], 'constant': [], 'ir_15': [0], 'ir_16': [1]}
xfts_open:
{'constant': [0, 22, 512], 'ir_24': [41]}
cycle_warning_required:
{'constant': [0, 1, 16, 255]}
yesno:
{'constant': [0, 1, 10], 'ir_9': [], 'ir_30': [0]}
clear_ungetc_buffer_preserving_position:
{'constant': [0, 256], 'ir_8': [0]}
rpl_fflush:
{'constant': [0]}
freadahead:
{'constant': [0, 256]}
rpl_fseeko:
{'constant': [-17, -1, 0]}
AD_compare:
{'constant': [0, 1, 255]}
AD_hash:
{'constant': [], 'ir_11': [0]}
setup_dir:
{'constant': [0, 1, 258], 'ir_23': [32], 'ir_12': [0], 'ir_13': [31]}
enter_dir:
{'constant': [0, 1, 2, 72, 258], 'ir_12': [24]}
leave_dir:
{'constant': [-2147483648, 0, 48, 72, 258], 'ir_22': [], 'ir_74': [0]}
free_dir:
{'constant': [0, 258]}
fd_ring_clear:
{'constant': [0, 1, 255]}
fts_set_stat_required:
{'constant': [0, 1, 2, 11]}
cwd_advance_fd:
{'constant': [-2147483648, -100, 0, 4, 60]}
restore_initial_cwd:
{'constant': [-100, 0, 4, 60, 512], 'ir_32': [-100], 'ir_17': [1]}
diropen:
{'constant': [0, 13, 512, 131072, 592000]}
rpl_fts_open:
{'constant': [-2147483648, -4096, -513, -100, -1, 0, 1, 2, 3, 4, 9, 11, 18, 22, 47, 60, 232, 512, 1024, 2048, 4096], 'ir_44': [96], 'ir_45': [1], 'ir_81': [0], 'ir_247': [-1]}
fts_load:
{'constant': [0, 1, 232], 'ir_23': [47]}
rpl_fts_close:
{'constant': [-2147483648, 0, 4, 60, 512]}
dev_type_hash:
{'constant': [], 'ir_11': [0]}
dev_type_compare:
{'constant': [1, 255]}
filesystem_type:
{'constant': [-2147483648, 0, 512], 'ir_25': [0], 'ir_26': [13], 'ir_46': [], 'ir_83': [16]}
dirent_inode_sort_may_be_useful:
{'constant': [-11317950, 0, 1, 26985, 16914836]}
leaf_optimization:
{'constant': [-11317950, 0, 1, 2, 26985, 40864, 40865, 'SFAO', 'XFSB']}
rpl_fts_read:
{'string': ['..'], 'constant': [-2147483648, -4097, -1, 0, 1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 16, 47, 64, 232, 255, 512, 4096, 8192, 16384, 61440, 65535], 'ir_18': [1], 'ir_30': [2], 'ir_19': [0], 'ir_32': [12], 'ir_297': [4], 'ir_34': [13], 'ir_149': [3], 'ir_351': [-1]}
rpl_fts_set:
{'constant': [0, 1, 2, 3, 4, 22, 65535]}
rpl_fts_children:
{'constant': [-2147483648, 0, 1, 2, 4, 9, 22, 47, 512, 4096, 8192], 'ir_63': [1], 'ir_78': [1, 2]}
set_stat_type:
{'constant': [0, 2, 13, 4096, 8192, 16384, 24576, 32768, 40960, 49152]}
fts_build:
{'string': ['..'], 'constant': [-2147483648, -100, -1, 0, 1, 2, 3, 4, 6, 7, 8, 11, 12, 16, 19, 32, 47, 72, 78, 232, 256, 512, 1024, 1030, 8192, 65535, 100000, 131072], 'ir_71': [], 'ir_72': [0, 131072], 'ir_74': [-100], 'ir_109': [0], 'ir_190': [3], 'ir_191': [1030], 'ir_623': [-1], 'ir_430': [1]}
fts_stat:
{'constant': [-1, 0, 1, 2, 3, 5, 8, 12, 32, 46, 72, 16384, 32768, 40960, 61440], 'ir_60': [256], 'ir_86': [160], 'ir_87': [0]}
fts_compar:
{'constant': []}
fts_sort:
{'constant': [0, 1, 2, 4, 40, 1073741824], 'ir_59': [4], 'ir_97': [0]}
fts_alloc:
{'constant': [-8, 0, 3, 232, 240]}
fts_lfree:
{'constant': [0]}
fts_palloc:
{'constant': [0, 1, 78, 256]}
fts_padjust:
{'constant': [-2147483648, 0, 232]}
fts_maxarglen:
{'constant': [0, 1, 4]}
fts_safe_changedir:
{'string': ['..'], 'constant': [-2147483648, 0, 1, 2, 4, 60, 512], 'ir_79': [], 'ir_161': [0], 'ir_122': [1]}
exchange:
{'constant': [0, 1, 2]}
process_long_option:
{'string': ["%s: option '%s%s' is ambiguous; possibilities:", " '%s%s'", "%s: option '%s%s' is ambiguous\n", "%s: option '%s%s' doesn't allow an argument\n", "%s: option '%s%s' requires an argument\n", "%s: unrecognized option '%s%s'\n"], 'constant': [-1, 0, 1, 2, 16, 45, 58, 61], 'ir_208': [], 'ir_447': [0], 'ir_431': [10]}
_getopt_initialize:
{'string': ['POSIXLY_CORRECT'], 'constant': [0, 1, 2, 43, 45]}
_getopt_internal_r:
{'string': ['--', "%s: option requires an argument -- '%c'\n", "%s: option requires an argument -- '%c'\n", "%s: invalid option -- '%c'\n"], 'constant': [0, 1, 2, 43, 45, 58, 59, 87], 'ir_374': []}
rpl_getopt_internal:
{'constant': []}
rpl_getopt:
{'constant': [], 'ir_5': [0]}
rpl_getopt_long:
{'constant': []}
_getopt_long_r:
{'constant': []}
rpl_getopt_long_only:
{'constant': []}
_getopt_long_only_r:
{'constant': []}
rpl_mbrtowc:
{'constant': [-2, 0, 1], 'ir_22': [], 'ir_53': [0]}
c_strcasecmp:
{'constant': [0, 1]}
close_stream:
{'constant': [-1, 0, 1, 9]}
is_zero_or_power_of_two:
{'constant': [1, 255]}
cycle_check_init:
{'constant': [0, 9827862], 'ir_2': [0]}
cycle_check:
{'constant': [0, 1, 9827862], 'ir_9': [], 'ir_13': [60], 'ir_51': [1], 'ir_52': [0]}
open_safer:
{'constant': [0, 256], 'ir_16': [0]}
hard_locale:
{'string': ['POSIX'], 'constant': [0, 1, 255], 'ir_7': [257], 'ir_8': [], 'ir_45': [0]}
hash_get_n_buckets:
{'constant': []}
hash_get_n_buckets_used:
{'constant': []}
hash_get_n_entries:
{'constant': []}
hash_get_max_bucket_length:
{'constant': [0, 1, 8], 's_18': [0, 1, 2, 3]}
hash_table_ok:
{'constant': [0, 1, 8], 's_18': [0, 1, 2, 3]}
safe_hasher:
{'constant': [3]}
hash_lookup:
{'constant': [0]}
hash_get_first:
{'constant': [0, 8]}
hash_get_next:
{'constant': [0, 8]}
hash_get_entries:
{'constant': [0, 1, 2, 8]}
hash_do_for_each:
{'constant': [0, 1, 8]}
hash_string:
{'constant': [0, 1, 5]}
is_prime:
{'constant': [0, 1, 2, 3, 255], 's_10': [3, 4, 5, 6, 7, 9, 25, 49]}
next_prime:
{'constant': [-1, 0, 1, 2, 10]}
hash_reset_tuning:
{'constant': [0]}
raw_hasher:
{'constant': [], 'ir_6': [3]}
raw_comparator:
{'constant': [1, 255]}
hash_initialize:
{'constant': [0, 1, 3], 'ir_15': [40], 'ir_43': [8]}
hash_clear:
{'constant': [0, 8]}
hash_free:
{'constant': [0, 8]}
allocate_entry:
{'constant': [0], 'ir_11': [8]}
free_entry:
{'constant': [0]}
hash_find_entry:
{'constant': [0]}
transfer_entries:
{'constant': [0, 1, 8]}
hash_rehash:
{'constant': [0, 1, 3], 'ir_21': [8], 'ir_127': [0], 'ir_64': [], 'ir_94': [1]}
hash_insert:
{'constant': [-1, 0], 'ir_8': [], 'ir_21': [0]}
i_ring_init:
{'constant': [0, 1, 2, 4]}
i_ring_empty:
{'constant': []}
i_ring_push:
{'constant': [0, 1, 2, 3, 255], 's_10': [0]}
i_ring_pop:
{'constant': [0, 1, 2, 3]}
locale_charset:
{'constant': [0], 'ir_3': [14]}
openat_safer:
{'constant': [0, 256], 'ir_16': [0]}
opendirat:
{'constant': [-2147483648, 0, 592000]}
setlocale_null_androidfix:
{'constant': [], 'ir_4': [0]}
setlocale_null_unlocked:
{'constant': [0, 1, 22]}
setlocale_null_r:
{'constant': []}
setlocale_null:
{'constant': []}
fd_safer:
{'constant': [-2147483648, 0, 3]}
rpl_fclose:
{'constant': [-2147483648, -1, 0], 'ir_27': [0], 'ir_34': [-1]}
rpl_fcntl:
{'constant': [0, 1, 2, 3, 4, 10, 11, 23, 24, 25, 1024, 1025, 1026, 1030, 1032, 1033], 'ir_85': [0]}
rpl_fcntl_DUPFD:
{'constant': [], 'ir_6': [0]}
rpl_fcntl_DUPFD_CLOEXEC:
{'constant': [-2147483648, -1, 0, 1, 22], 'ir_8': [1030], 'ir_47': [1], 'ir_57': [2]}
rotl64:
{'constant': [-1, 0, 1, 31, 32, 63]}
rotr64:
{'constant': [-1, 0, 1, 31, 32, 63]}
rotl32:
{'constant': [0, 31, 32]}
rotr32:
{'constant': [31, 32]}
rotl_sz:
{'constant': [0, 31, 32]}
rotr_sz:
{'constant': [31, 32]}
rotl16:
{'constant': [0, 31, 65535], 'ir_8': [16]}
rotr16:
{'constant': [0, 31, 65535], 'ir_8': [16]}
rotl8:
{'constant': [0, 31, 255], 'ir_8': [8]}
rotr8:
{'constant': [0, 31, 255], 'ir_8': [8]}
c_isalnum:
{'constant': [0, 1, 10, 26, 48, 65, 91, 97]}
c_isalpha:
{'constant': [0, 1, 65, 91]}
c_isascii:
{'constant': [0, 1, 128]}
c_isblank:
{'constant': [0, 1, 9, 32, 255]}
c_iscntrl:
{'constant': [-2147483648, 0, 1, 32]}
c_isdigit:
{'constant': [0, 1, 10, 48]}
c_isgraph:
{'constant': [0, 1, 33, 94]}
c_islower:
{'constant': [0, 1, 26, 97]}
c_isprint:
{'constant': [0, 1, 32, 95]}
c_ispunct:
{'constant': [0, 1, 4, 15, 33, 58, 65, 91, 97, 123]}
c_isspace:
{'constant': [0, 1, 9, 14]}
c_isupper:
{'constant': [0, 1, 26, 65]}
c_isxdigit:
{'constant': [0, 1, 2, 48, 55]}
c_tolower:
{'constant': [0, 26, 32, 65]}
c_toupper:
{'constant': [0, 26, 32, 97]}
dup_safer:
{'constant': [], 'ir_4': [3], 'ir_5': [0]}
__libc_csu_fini:
{'constant': []}
atexit:
{'constant': [], 'ir_5': [0]}
stat64:
{'constant': [], 'ir_9': [3]}
fstat64:
{'constant': [], 'ir_9': [3]}
lstat64:
{'constant': [], 'ir_9': [3]}
fstatat64:
{'constant': [], 'ir_14': [3]}
__do_global_ctors_aux:
{'constant': [-1, 4]}
_MIPS_STUBS_:
{'constant': []}
sub_415390:
{'constant': []}
sub_4153a0:
{'constant': []}
sub_4153b0:
{'constant': []}
sub_4153c0:
{'constant': []}
sub_4153d0:
{'constant': []}
sub_4153e0:
{'constant': []}
sub_4153f0:
{'constant': []}
sub_415400:
{'constant': []}
sub_415410:
{'constant': []}
sub_415420:
{'constant': []}
sub_415430:
{'constant': []}
sub_415440:
{'constant': []}
sub_415450:
{'constant': []}
sub_415460:
{'constant': []}
sub_415470:
{'constant': []}
sub_415480:
{'constant': []}
sub_415490:
{'constant': []}
sub_4154a0:
{'constant': []}
sub_4154b0:
{'constant': []}
sub_4154c0:
{'constant': []}
sub_4154d0:
{'constant': []}
sub_4154e0:
{'constant': []}
sub_4154f0:
{'constant': []}
sub_415500:
{'constant': []}
sub_415510:
{'constant': []}
sub_415520:
{'constant': []}
sub_415530:
{'constant': []}
sub_415540:
{'constant': []}
sub_415550:
{'constant': []}
sub_415560:
{'constant': []}
sub_415570:
{'constant': []}
sub_415580:
{'constant': []}
sub_415590:
{'constant': []}
sub_4155a0:
{'constant': []}
sub_4155b0:
{'constant': []}
sub_4155c0:
{'constant': []}
sub_4155d0:
{'constant': []}
sub_4155e0:
{'constant': []}
sub_4155f0:
{'constant': []}
sub_415600:
{'constant': []}
sub_415610:
{'constant': []}
sub_415620:
{'constant': []}
sub_415630:
{'constant': []}
sub_415640:
{'constant': []}
sub_415650:
{'constant': []}
sub_415660:
{'constant': []}
sub_415670:
{'constant': []}
sub_415680:
{'constant': []}
sub_415690:
{'constant': []}
sub_4156a0:
{'constant': []}
sub_4156b0:
{'constant': []}
sub_4156c0:
{'constant': []}
sub_4156d0:
{'constant': []}
sub_4156e0:
{'constant': []}
sub_4156f0:
{'constant': []}
sub_415700:
{'constant': []}
sub_415710:
{'constant': []}
sub_415720:
{'constant': []}
sub_415730:
{'constant': []}
sub_415740:
{'constant': []}
sub_415750:
{'constant': []}
sub_415760:
{'constant': []}
sub_415770:
{'constant': []}
sub_415780:
{'constant': []}
sub_415790:
{'constant': []}
sub_4157a0:
{'constant': []}
sub_4157b0:
{'constant': []}
sub_4157c0:
{'constant': []}
sub_4157d0:
{'constant': []}
sub_4157e0:
{'constant': []}
sub_4157f0:
{'constant': []}
_fini:
{'constant': []}
sub_415830:
{'constant': []}
